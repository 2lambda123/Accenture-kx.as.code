require 'yaml'

current_dir    = File.dirname(File.expand_path(__FILE__))
configs        = YAML.load_file("#{current_dir}/config.yaml")
vagrant_config = configs['configs']

ENVIRONMENT_PREFIX = vagrant_config['environment_prefix']
MAIN_NODE_CPU_CORES = vagrant_config['main_node_cpu_cores']
MAIN_NODE_MEMORY = vagrant_config['main_node_memory']
WORKER_NODE_COUNT = vagrant_config['worker_node_count']
WORKER_NODE_CPU_CORES = vagrant_config['worker_node_cpu_cores']
WORKER_NODE_MEMORY = vagrant_config['worker_node_memory']
DOCKERHUB_USER = vagrant_config['dockerhub_username']
DOCKERHUB_EMAIL = vagrant_config['dockerhub_email']
DOCKERHUB_PASSWORD = vagrant_config['dockerhub_password']
BOX_VERSION = vagrant_config['box_version']

Vagrant.configure("2") do |config|
    config.vm.define "kx.as.code-main" do |subconfig|
        subconfig.vm.box = "kx.as.code-main-vmware-#{BOX_VERSION}"
        subconfig.vm.box_url = "V:/jenkins_remote/workspace/VMWare_Workstation/KX.AS.CODE_Main_Build/base-vm/boxes/vmware-desktop-#{BOX_VERSION}/kx.as.code-main-demo-#{BOX_VERSION}.box"
        subconfig.vm.synced_folder "c:/Users/Patrick/KX_Share", "/home/kx.hero/KX_Share",
            owner: "kx.hero", group: "kx.hero"
            subconfig.vm.provision "file", source: "./profile-config.json", destination: "/var/tmp/profile-config.json"
            subconfig.vm.provision "file", source: "./users.json", destination: "/var/tmp/users.json"
            Dir[File.dirname(__FILE__) + '/aq*.json'].each do |file|
                file_name = File.basename(file)
                subconfig.vm.provision "file", source: file_name, destination: "/var/tmp/" + file_name
            end
            subconfig.vm.provision "shell", inline: 'sudo mv /var/tmp/profile-config.json /usr/share/kx.as.code/workspace/profile-config.json'
            subconfig.vm.provision "shell", inline: 'sudo mv /var/tmp/users.json /usr/share/kx.as.code/workspace/users.json'
            subconfig.vm.provision "shell", inline: 'sudo mv /var/tmp/aq*.json /usr/share/kx.as.code/workspace/'
            subconfig.vm.provision "shell", inline: 'echo -e "$(date "+%Y-%m-%d_%H%M%S") | KX-Worker VM created by Vagrant" | sudo tee /usr/share/kx.as.code/workspace/vagrant'
            subconfig.vm.provision :shell do |s|
              s.inline = "echo -e \"DOCKERHUB_USER=#{DOCKERHUB_USER}\nDOCKERHUB_EMAIL=#{DOCKERHUB_EMAIL}\nDOCKERHUB_PASSWORD=#{DOCKERHUB_PASSWORD}\" | sudo tee /var/tmp/.textfile"
            end
            subconfig.vm.provider "vmware_desktop" do |v|
            v.gui = true
            v.whitelist_verified = true
            v.vmx['displayname'] = "kx.as.code-#{ENVIRONMENT_PREFIX}-main-#{BOX_VERSION}"
            v.vmx["memsize"] = "#{MAIN_NODE_MEMORY}"
            v.vmx["numvcpus"] = "#{MAIN_NODE_CPU_CORES}"
            v.vmx["mks.enable3d"] = "FALSE"
            v.vmx["ethernet0.pcislotnumber"] = "33"
            v.vmx["sound.startconnected"] = "FALSE"
            v.vmx["sound.present"] = "FALSE"
        end
    end

    (1..WORKER_NODE_COUNT).each do |i|
        config.vm.define "kx.as.code-worker#{i}" do |subconfig|
          subconfig.vm.box = "kx.as.code-worker-vmware-#{BOX_VERSION}"
          subconfig.vm.box_url = "V:/jenkins_remote/workspace/VMWare_Workstation/KX.AS.CODE_Worker_Build/base-vm/boxes/vmware-desktop-#{BOX_VERSION}/kx.as.code-worker-demo-#{BOX_VERSION}.box"
          subconfig.vm.hostname = "kx-worker#{i}"
          subconfig.vm.provision "file", source: "./profile-config.json", destination: "/var/tmp/profile-config.json"
          subconfig.vm.provision "shell", inline: 'sudo mkdir -p /usr/share/kx.as.code/workspace; sudo chown kx.hero:kx.hero /usr/share/kx.as.code/workspace'
          subconfig.vm.provision "shell", inline: 'sudo mv /var/tmp/profile-config.json /usr/share/kx.as.code/workspace/profile-config.json'
          subconfig.vm.provision "shell", inline: 'echo -e "$(date "+%Y-%m-%d_%H%M%S") | KX-Worker VM created by Vagrant" | sudo tee /usr/share/kx.as.code/workspace/vagrant'
          subconfig.vm.provider "vmware_desktop" do |v|
            v.gui = true
            v.whitelist_verified = true
            v.vmx['displayname'] = "kx.as.code-#{ENVIRONMENT_PREFIX}-worker#{i}-#{BOX_VERSION}"
            v.vmx["memsize"] = "#{WORKER_NODE_MEMORY}"
            v.vmx["numvcpus"] = "#{WORKER_NODE_CPU_CORES}"
            v.vmx["mks.enable3d"] = "FALSE"
            v.vmx["ethernet0.pcislotnumber"] = "33"
            v.vmx["sound.startconnected"] = "FALSE"
            v.vmx["sound.present"] = "FALSE"
          end
        end
      end
  end


  
