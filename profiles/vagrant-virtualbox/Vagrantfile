require 'yaml'

current_dir    = File.dirname(File.expand_path(__FILE__))
configs        = YAML.load_file("#{current_dir}/config.yaml")
vagrant_config = configs['configs']

ENVIRONMENT_PREFIX = vagrant_config['environment_prefix']
MAIN_NODE_CPU_CORES = vagrant_config['main_node_cpu_cores']
MAIN_NODE_MEMORY = vagrant_config['main_node_memory']
WORKER_NODE_COUNT = vagrant_config['worker_node_count']
WORKER_NODE_CPU_CORES = vagrant_config['worker_node_cpu_cores']
WORKER_NODE_MEMORY = vagrant_config['worker_node_memory']
DOCKERHUB_USER = vagrant_config['dockerhub_username']
DOCKERHUB_EMAIL = vagrant_config['dockerhub_email']
DOCKERHUB_PASSWORD = vagrant_config['dockerhub_password']
BOX_VERSION = vagrant_config['box_version']

Vagrant.configure("2") do |config|
  config.vm.define "kx.as.code-main" do |subconfig|
    subconfig.vm.box = "kx.as.code-main"
    subconfig.vm.hostname = "kx-main"
    subconfig.vm.box_url = "base-vm/boxes/virtualbox/kx.as.code-main.box"
    subconfig.vm.network :forwarded_port, id: 'ssh', guest: 22, host: 2222, disabled: true
    subconfig.ssh.guest_port = 2222
    subconfig.vm.provision "file", source: "autoSetup.json", destination: "/home/vagrant/autoSetup.json"
    subconfig.vm.provision "shell", inline: "sudo mv /home/vagrant/autoSetup.json /home/kx.hero/Kubernetes/"
    subconfig.vm.provision "shell", inline: "cat /home/kx.hero/Kubernetes/autoSetup.json | jq '.'"
    subconfig.vm.provision "shell", inline: "set -x; jq '. | .start_message=\"'''$(date \"+%Y-%m-%d_%H%M%S\")''' - KX-Main VM created by Vagrant\"' /home/kx.hero/Kubernetes/autoSetup.json | sudo tee /home/kx.hero/Kubernetes/autoSetup.json; set +x"
    subconfig.vm.provision :shell do |s|
      s.inline = "echo -e \"DOCKERHUB_USER=#{DOCKERHUB_USER}\nDOCKERHUB_EMAIL=#{DOCKERHUB_EMAIL}\nDOCKERHUB_PASSWORD=#{DOCKERHUB_PASSWORD}\" | sudo tee /var/tmp/.textfile"
    end
    subconfig.vm.provider "virtualbox" do |v|
      v.name = "kx.as.code-#{ENVIRONMENT_PREFIX}-main-#{BOX_VERSION}"
      v.customize ["modifyvm", :id, "--memory", "#{MAIN_NODE_MEMORY}"]
      v.customize ["modifyvm", :id, "--cpus", "#{MAIN_NODE_CPU_CORES}"]
      v.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
      v.customize ["modifyvm", :id, "--accelerate3d", "off"]
      v.customize ["modifyvm", :id, "--vram", "128"]
      v.customize ["modifyvm", :id, "--nic1", "natnetwork","--natnetwork1","kxascode"]
      v.customize ["setextradata", :id, "CustomVideoMode1", "1920x1200x32"]
    end
    subconfig.vm.provider "vmware_desktop" do |v|
      v.gui = true
      v.whitelist_verified = true
      v.vmx['displayname'] = 'kx.as.code-#{ENVIRONMENT_PREFIX}-main-#{BOX_VERSION}'
      v.vmx["memsize"] = "#{MAIN_NODE_MEMORY}"
      v.vmx["numvcpus"] = "#{MAIN_NODE_CPU_CORES}"
      v.vmx["mks.enable3d"] = "FALSE"
      v.vmx["ethernet0.pcislotnumber"] = "33"
      v.vmx["sound.startconnected"] = "FALSE"
      v.vmx["sound.present"] = "FALSE"
    end

  end

  (1..WORKER_NODE_COUNT).each do |i|
    config.vm.define "kx.as.code-worker#{i}" do |subconfig|
      subconfig.vm.box = "kx.as.code-worker"
      subconfig.vm.hostname = "kx-worker#{i}"
      subconfig.vm.network :forwarded_port, id: "ssh-kx-worker#{i}", guest: 22, host: "223#{i}", disabled: true
      subconfig.ssh.guest_port = "223#{i}"
      subconfig.vm.box_url = "boxes/#{provider}/kx.as.code-worker.box"
      subconfig.vm.provision "shell", inline: 'echo -e "$(date "+%Y-%m-%d_%H%M%S") | KX-Worker VM created by Vagrant" | sudo tee /home/kx.hero/Kubernetes/vagrant'
      subconfig.vm.provider "virtualbox" do |v|
        v.name = "kx.as.code-#{ENVIRONMENT_PREFIX}-worker#{i}-#{BOX_VERSION}"
        v.customize ["modifyvm", :id, "--memory", "#{WORKER_NODE_MEMORY}"]
        v.customize ["modifyvm", :id, "--cpus", "#{WORKER_NODE_CPU_CORES}"]
        v.customize ["modifyvm", :id, "--nic1", "natnetwork","--natnetwork1","kxascode"]
      end
      subconfig.vm.provider "vmware_desktop" do |v|
        v.gui = true
        v.whitelist_verified = true
        v.vmx['displayname'] = 'kx.as.code-#{ENVIRONMENT_PREFIX}-worker#{i}-#{BOX_VERSION}'
        v.vmx["memsize"] = "#{WORKER_NODE_MEMORY}"
        v.vmx["numvcpus"] = "#{WORKER_NODE_CPU_CORES}"
        v.vmx["mks.enable3d"] = "FALSE"
        v.vmx["ethernet0.pcislotnumber"] = "33"
        v.vmx["sound.startconnected"] = "FALSE"
        v.vmx["sound.present"] = "FALSE"
      end
    end
  end
end
