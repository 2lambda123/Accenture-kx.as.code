---
apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
  labels:
    name: jenkins
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-master-pv
  namespace: jenkins
  labels:
    app: jenkins-master
    type: local
    purpose: jenkins-master-deployment
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/kx.hero/KX_Data/Jenkins
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-master-pvclaim
  namespace: jenkins
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "jenkins-master-deployment"
  namespace: jenkins
  labels:
    app: jenkins-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "jenkins-master"
  template:
    metadata:
      labels:
        app: jenkins-master
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
       - name: jenkins-volume
         image: alpine:3.6
         command:
          - chown
          - -R
          - 1000:1000
          - /var/jenkins_home
         volumeMounts:
          - name: jenkins-home
            mountPath: /var/jenkins_home
      containers:
       - name: "jenkins-master"
         image: "jenkins/jenkins"
         imagePullPolicy: "IfNotPresent"
         env:
          - name: JAVA_OPTS
            value: -Djenkins.install.runSetupWizard=false
         ports:
          - name: http-port
            containerPort: 8080
          - name: jnlp-port
            containerPort: 50000
         volumeMounts:
          - name: jenkins-home
            mountPath: /var/jenkins_home
      volumes:
       - name: jenkins-home
         persistentVolumeClaim:
           claimName: jenkins-master-pvclaim
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-master-service
  namespace: jenkins
  labels:
    app: jenkins-master
spec:
  type: ClusterIP
  ports:
   - port: 8080
     targetPort: 8080
     protocol: TCP
  selector:
    app: jenkins-master
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: jenkins
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
        - jenkins.kx-as-code.local
  rules:
  - host: jenkins.kx-as-code.local
    http:
      paths:
       - path: /
         backend:
           serviceName: jenkins-master-service
           servicePort: 8080
---
