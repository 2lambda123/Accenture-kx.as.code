        "gitlab.yml.erb": "production: \u0026base\n  gitlab:\n    host: gitlab.demo1.kx-as-code.local\n    https: true\n    max_request_duration_seconds: 57\n    impersonation_enabled: \n    application_settings_cache_seconds: 60\n    usage_ping_enabled: true\n    seat_link_enabled: true\n    default_can_create_group: true\n    username_changing_enabled: true\n    issue_closing_pattern: \n    default_theme: \n    default_projects_features:\n      issues: true\n      merge_requests: true\n      wiki: true\n      snippets: true\n      builds: true\n      container_registry: true\n    webhook_timeout: \n    trusted_proxies:\n    time_zone: \"UTC\"        \n    email_from: \"gitlab@demo1.kx-as-code.local\"\n    email_display_name: \"GitLab\"\n    email_reply_to: \"noreply@demo1.kx-as-code.local\"\n    email_subject_suffix: \"\"\n  \n  gravatar:\n    plain_url: \n    ssl_url: \n  extra:\n    \n    \n    \n  artifacts:\n    enabled: true\n    object_store:\n      enabled: true\n      remote_directory: gitlab-artifacts-storage\n      direct_upload: true\n      background_upload: false\n      proxy_download: true\n      connection: \u003c%= YAML.load_file(\"/etc/gitlab/objectstorage/artifacts\").to_json() %\u003e\n  lfs:\n    enabled: true\n    object_store:\n      enabled: true\n      remote_directory: gitlab-lfs-storage\n      direct_upload: true\n      background_upload: false\n      proxy_download: true\n      connection: \u003c%= YAML.load_file(\"/etc/gitlab/objectstorage/lfs\").to_json() %\u003e\n  uploads:\n    enabled: true\n    object_store:\n      enabled: true\n      remote_directory: gitlab-uploads-storage\n      direct_upload: true\n      background_upload: false\n      proxy_download: true\n      connection: \u003c%= YAML.load_file(\"/etc/gitlab/objectstorage/uploads\").to_json() %\u003e\n  packages:\n    enabled: true\n    object_store:\n      enabled: true\n      remote_directory: gitlab-packages-storage\n      direct_upload: true\n      background_upload: false\n      proxy_download: true\n      connection: \u003c%= YAML.load_file(\"/etc/gitlab/objectstorage/packages\").to_json() %\u003e\n  external_diffs:\n    enabled: false\n    when: \n    object_store:\n      enabled: false\n      remote_directory: gitlab-externaldiffs-storage\n      direct_upload: true\n      background_upload: false\n      proxy_download: true\n  terraform_state:\n    enabled: false\n    object_store:\n      enabled: false\n      remote_directory: gitlab-terraform-state\n      direct_upload: true\n      background_upload: false\n      proxy_download: true\n  dependency_proxy:\n    enabled: false\n    object_store:\n      enabled: false\n      remote_directory: gitlab-dependency-proxy\n      direct_upload: true\n      background_upload: false\n      proxy_download: true\n  \n  sentry:\n    enabled: false\n    dsn: \n    clientside_dsn: \n    environment: \n  \n  sidekiq:\n  pages:\n    enabled: false\n    access_control: false\n    artifacts_server: true\n    path: /srv/gitlab/shared/pages\n    host: pages.demo1.kx-as-code.local\n    port: 443\n    https: true\n    secret_file: /etc/gitlab/pages/secret\n    external_http: false\n    external_https: false\n    object_store:\n      enabled: true\n      remote_directory: gitlab-pages\n  mattermost:\n    enabled: false\n  gitlab_ci:\n  ldap:\n    enabled: false\n  \n  omniauth:\n    enabled: true\n    sync_profile_from_provider: []\n    sync_profile_attributes: ['email']\n    allow_single_sign_on: [\"openid_connect\"]\n    block_auto_created_users: false\n    auto_link_ldap_user: false\n    auto_link_saml_user: true\n    external_providers: []\n    providers:\n      - { name: 'openid_connect',\n          label: 'Keycloak',\n          args: {\n            name: 'openid_connect',\n            scope: ['openid','profile','email'],\n            response_type: 'code',\n            issuer: 'https://keycloak.DummyIssuer/auth/realms/DummyRealm',\n            discovery: true,\n            client_auth_method: 'query',\n            send_scope_to_token_endpoint: false,\n            user_response_structure: {\n              id_path: 'preferred_username',\n              attributes: {  nickname:  'preferred_username'  }\n            },\n            client_options: {\n              identifier: 'DummyIdentifier',\n              secret: 'DummySecret',\n              redirect_uri: 'https://DummyRedirectUri/users/auth/openid_connect/callback'\n              }\n            }\n            }\n\n  kerberos:\n    enabled: false\n  shared:\n  gitaly:\n    client_path: /home/git/gitaly/bin\n    token: \"\u003c%= File.read('/etc/gitlab/gitaly/gitaly_token').strip.dump[1..-2] %\u003e\"\n  repositories:\n    storages: # You must have at least a `default` storage path.\n      default:\n        path: /var/opt/gitlab/repo\n        gitaly_address: tcp://gitlab-ce-gitaly-0.gitlab-ce-gitaly.gitlab-ce.svc:8075\n      \n  backup:\n    path: \"tmp/backups\"   # Relative paths are relative to Rails.root (default: tmp/backups/)\n  \n  gitlab_shell:\n    path: /home/git/gitlab-shell/\n    hooks_path: /home/git/gitlab-shell/hooks/\n    upload_pack: true\n    receive_pack: true\n    ssh_port: 22\n    secret_file: /etc/gitlab/shell/.gitlab_shell_secret\n  workhorse:\n    secret_file: /etc/gitlab/gitlab-workhorse/secret\n  git:\n    bin_path: /usr/bin/git\n  webpack:\n  monitoring:\n    ip_whitelist:\n      - 0.0.0.0/0\n    web_exporter:\n      enabled: false\n      address: 0.0.0.0\n      port: 8083\n    sidekiq_exporter:\n  shutdown:\n    blackout_seconds: \u003c%= ENV[\"SHUTDOWN_BLACKOUT_SECONDS\"] %\u003e\n  rack_attack:\n    git_basic_auth:\n  ## Registry Integration\n  registry:\n    enabled: true\n    host: registry.demo1.kx-as-code.local\n    api_url: http://gitlab-ce-registry.gitlab-ce.svc:5000\n    key: /etc/gitlab/registry/gitlab-registry.key\n    issuer: gitlab-issuer\n    notification_secret: \u003c%= YAML.load_file(\"/etc/gitlab/registry/notificationSecret\").flatten.first %\u003e\n  smartcard:\n    enabled: false\n    ca_file: '/etc/gitlab/rails-secrets/smartcard-ca.crt'\n    client_certificate_required_host: smartcard.demo1.kx-as-code.local\n    client_certificate_required_port: 443\n    san_extensions: false\n    required_for_git_access: false\n",