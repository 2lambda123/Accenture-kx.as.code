configureBindDns() {

  # Update BIN9 configuration of profile-config JSON has configured DNS forwarding
  if [[ "${dnsForwarding}" == "only" ]]; then

  # Can only enabled dnsForwarding if a DNS server IP has been define to forward requests to
  if [[ -n "${fixedNicConfigDns1}" ]] || [[ -n "${fixedNicConfigDns2}" ]]; then

  if [[ -n ${fixedNicConfigDns1} ]] && [[ -z ${fixedNicConfigDns2} ]]; then
    local dnsLine1="${fixedNicConfigDns1};"
    local dnsLine2=""
  elif [[ -n ${fixedNicConfigDns2} ]] && [[ -z ${fixedNicConfigDns1} ]]; then
    local dnsLine1="${fixedNicConfigDns2};"
    local dnsLine2=""
  elif [[ -n ${fixedNicConfigDns1} ]] && [[ -n ${fixedNicConfigDns2} ]]; then
    local dnsLine1="${fixedNicConfigDns1};"
    local dnsLine2="${fixedNicConfigDns2};"
  fi

  # Overwrite existing bind9 configuration to enable dns forwarding
sudo bash -c "cat << 'EOF' > /etc/bind/named.conf.options
options {
        directory \"/var/cache/bind\";

        // If there is a firewall between you and nameservers you want
        // to talk to, you may need to fix the firewall to allow multiple
        // ports to talk.  See http://www.kb.cert.org/vuls/id/800113

        // If your ISP provided one or more IP addresses for stable
        // nameservers, you probably want to use them as forwarders.
        // Uncomment the following block, and insert the addresses replacing
        // the all-0s placeholder.

        forward ${dnsForwarding};
        forwarders {
          ${dnsLine1}
          ${dnsLine2}
        };

        //========================================================================
        // If BIND logs error messages about the root key being expired,
        // you will need to update your keys.  See https://www.isc.org/bind-keys
        //========================================================================
        dnssec-enable no;
        dnssec-validation no;
        auth-nxdomain no;
        listen-on-v6 { any; };
        allow-query { any; };
        version \"not currently available\";
        recursion yes;
        querylog no;
        allow-transfer { none; };
};
EOF"

  else
    log_warn "You have set dnsForwarding to \"only\", but not defined any DNS servers in profile-config.json. Ignoring setting. You must at least define .config.dnsResolution.dns1 to enable this."
  fi
  fi

sudo bash -c "cat << 'EOF' > /etc/bind/named.conf.local
//
// Do any local configuration here
//

// Consider adding the 1918 zones here, if they are not used in your
// organization
//include \"/etc/bind/zones.rfc1918\";

zone \"${baseDomain}\" {
      type master;
      file \"/etc/bind/db.${baseDomain}\";
      allow-query { any; };
      allow-transfer { ${allowedIpRanges}; };
};
EOF"

sudo bash -c "cat << 'EOF' > /etc/bind/db.${baseDomain}
; BIND reverse data file for empty rfc1918 zone
;
; DO NOT EDIT THIS FILE - it is used for multiple zones.
; Instead, copy it, edit named.conf, and use that copy.
;
\$TTL    86400
\$ORIGIN ${baseDomain}.

@                 IN      SOA	   ${baseDomain}.   root.${baseDomain}. (
            1		; Serial
      604800		; Refresh
        86400		; Retry
      2419200		; Expire
        86400 )	; Negative Cache TTL
;
  IN  NS  ns1.${baseDomain}.

@                 IN      A      ${mainIpAddress}
ns1               IN      A      ${mainIpAddress}
pgadmin           IN      A      ${mainIpAddress}
kx-main1          IN      A      ${mainIpAddress}
ldap              IN      A      ${mainIpAddress}
ldapadmin         IN      A      ${mainIpAddress}
rabbitmq          IN      A      ${mainIpAddress}
remote-desktop    IN      A      ${mainIpAddress}
api-internal      IN      A      ${mainIpAddress}
*                 IN      A      ${mainIpAddress}
EOF"

  /usr/bin/sudo named-checkconf
  /usr/bin/sudo named-checkzone ${baseDomain} /etc/bind/db.${baseDomain}

  # Restart Bind9
  /usr/bin/sudo systemctl restart bind9

}
