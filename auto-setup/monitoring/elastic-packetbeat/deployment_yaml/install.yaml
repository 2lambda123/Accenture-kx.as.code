---
apiVersion: v1
kind: ConfigMap
metadata:
  name: packetbeat-dynamic-config
  namespace: {{ namespace }}
  labels:
    k8s-app: packetbeat-dynamic
    kubernetes.io/cluster-service: "true"
data:
  packetbeat.yml: |-
    setup.dashboards.enabled: true
    setup.template.enabled: true

    setup.template.settings:
      index.number_of_shards: 2

    packetbeat.interfaces.device: any

    packetbeat.protocols:
    - type: dns
      ports: [53]
      include_authorities: true
      include_additionals: true

    - type: http
      ports: [80, 443, 3000, 8000, 8080, 9090, 9200]

    packetbeat.flows:
      timeout: 30s
      period: 10s

    processors:
      - add_cloud_metadata:
      - add_kubernetes_metadata:
          host: ${HOSTNAME}
          indexers:
          - ip_port:
          matchers:
          - field_format:
              format: '%{[ip]}:%{[port]}'

    output.elasticsearch:
      hosts: '${ELASTICSEARCH_HOSTS:https://elasticsearch-master:9200}'
      ssl:
        certificate_authorities: ["/usr/share/packetbeat/config/certs/ca.crt"]
        certificate: /usr/share/packetbeat/config/certs/elasticsearch.crt
        key: /usr/share/packetbeat/config/certs/elasticsearch.key
      username: ${ELASTIC_USERNAME}
      password: ${ELASTIC_PASSWORD}
    http.port: "5069"
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: packetbeat-dynamic
  namespace: {{ namespace }}
  labels:
    k8s-app: packetbeat-dynamic
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: packetbeat-dynamic
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: packetbeat-dynamic
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      containers:
        - name: packetbeat-dynamic
          image: docker.elastic.co/beats/packetbeat:{{ elasticVersion }
          imagePullPolicy: Always
          args: [
              "-c", "/etc/packetbeat.yml",
              "-e",
          ]
          securityContext:
            runAsUser: 0
            capabilities:
              add:
                - NET_ADMIN
          env:
            - name: ELASTICSEARCH_HOST
              value: elasticsearch-master.elastic-stack
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: ELASTIC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: password
            - name: ELASTIC_CLOUD_ID
              value:
            - name: ELASTIC_CLOUD_AUTH
              value:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: config
              mountPath: /etc/packetbeat.yml
              readOnly: true
              subPath: packetbeat.yml
            - name: data
              mountPath: /usr/share/packetbeat/data
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: packetbeat-dynamic-config
        - name: data
          emptyDir: {}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: packetbeat-dynamic
subjects:
  - kind: ServiceAccount
    name: packetbeat-dynamic
    namespace: {{ namespace }}
roleRef:
  kind: ClusterRole
  name: packetbeat-dynamic
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: packetbeat-dynamic
  labels:
    k8s-app: packetbeat-dynamic
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: packetbeat-dynamic
  namespace: {{ namespace }}
  labels:
    k8s-app: packetbeat-dynamic