elasticsearchHosts: "https://elasticsearch-master:9200"
extraEnvs:
  - name: ELASTIC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: elastic-credentials
        key: password
  - name: ELASTIC_USERNAME
    valueFrom:
      secretKeyRef:
        name: elastic-credentials
        key: username
  - name: KIBANA_ENCRYPTION_KEY
    valueFrom:
      secretKeyRef:
        key: encryptionkey
        name: kibana-encryption-key
replicas: 1
image: "docker.elastic.co/kibana/kibana"
imageTag: "{{ elasticVersion }}"
imagePullPolicy: "IfNotPresent"
kibanaConfig:
  kibana.yml: |
    server:
      name: {{ componentName }}
      ssl:
        enabled: true
        key: /usr/share/kibana/config/certs/kibana.key
        certificate: /usr/share/kibana/config/certs/kibana.crt
    xpack.security.encryptionKey: ${KIBANA_ENCRYPTION_KEY}
    elasticsearch:
      hosts: ["https://elasticsearch-master:9200"]
      ssl:
        certificateAuthorities: /usr/share/kibana/config/certs/ca.crt
        verificationMode: certificate
      username: ${ELASTIC_USERNAME}
      password: ${ELASTIC_PASSWORD}
      requestHeadersWhitelist: [ es-security-runas-user, authorization ]
    xpack.monitoring.elasticsearch.requestHeadersWhitelist: [ es-security-runas-user, authorization ]
resources:
  requests:
    cpu: "1000m"
    memory: "2Gi"
  limits:
    cpu: "1000m"
    memory: "2Gi"
protocol: https
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/auth-url: "https://elastic-kibana-iam.demo1.kx-as-code.local/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://elastic-kibana-iam.demo1.kx-as-code.local/oauth2/start?rd=$scheme://$host$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-Email, Authorizations"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $authHeader0 $upstream_http_x_auth_request_email;
      proxy_set_header 'es-security-runas-user' $authHeader0;
      proxy_set_header Authorization "Basic {{kibanaBaseAuth}}";
  path: /
  hosts:
    - {{componentName}}.{{baseDomain}}
  tls:
    - hosts:
        - {{componentName}}.{{baseDomain}}
secretMounts:
  - name: elastic-certificates
    secretName: elastic-certificates
    path: /usr/share/kibana/config/certs
