<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>HEADER</name>
          <randomName>choice-parameter-178291677290751</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>try {
    // language=HTML
    def HTML = &quot;&quot;&quot;
    &lt;!--&lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.15.4/css/all.css&quot;&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.15.4/css/v4-shims.css&quot;&gt;--&gt;
    &lt;link href=&quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css&quot; rel=&quot;stylesheet&quot; /&gt;
    &lt;link href=&quot;//cdn.muicss.com/mui-0.10.3/css/mui.min.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;
    
    &lt;link href=&quot;/userContent/css/kx-core.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;
    
    &lt;head&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;/userContent/javascript/kx-core.js&quot;&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;style scoped=&quot;scoped&quot; onload=&quot;changeBuildButton();&quot;&gt;   &lt;/style&gt;
    &lt;/body&gt;
    &quot;&quot;&quot;
    return HTML
} catch (e) {
    println &quot;Something went wrong in the HTML return block (header.groovy): ${e}&quot;
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HIDDEN_HTML</choiceType>
          <omitValueField>true</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>PROFILE</name>
          <randomName>choice-parameter-12643293258837</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>import groovy.json.JsonSlurper
import groovy.json.JsonBuilder

import javax.swing.text.html.HTML

def githubKxVersion
def githubKubeVersion
def localKxVersion
def localKubeVersion
def vagrantPluginName
def vagrantPluginVersion
def vagrantVmwarePluginInstalled
def vagrantParallelsPluginInstalled
def parallelsExecutableExists
def vboxExecutableExists
def vmwareExecutableExists
def boxesList = []
def virtualboxMainExists
def virtualboxMainVersion
def virtualboxNodeExists
def virtualboxNodeVersion
def vmwareMainExists
def vmwareMainVersion
def vmwareNodeExists
def vmwareNodeVersion
def parallelsMainExists
def parallelsMainVersion
def parallelsNodeExists
def parallelsNodeVersion
def extendedDescription
def profilePaths = []
def boxDirectories = []

try {

    extendedDescription = &quot;Welcome to KX.AS.CODE. In this panel you can select the profile. A check is made on the system to see if the necessary virtualization software and associated Vagrant plugins are installed, s well as availability of built Vagrant boxes. An attempt is made to automatically select the profile based on discovered pre-requisites.&quot;

    new File(&apos;jenkins_shared_workspace/kx.as.code/profiles/&apos;).eachDirMatch(~/.*vagrant.*/) { profilePaths &lt;&lt; it.path }

    String underlyingOS
    println profilePaths

    def OS = System.getProperty(&quot;os.name&quot;, &quot;generic&quot;).toLowerCase(Locale.ENGLISH);
    if ((OS.indexOf(&quot;mac&quot;) &gt;= 0) || (OS.indexOf(&quot;darwin&quot;) &gt;= 0)) {
        underlyingOS = &quot;darwin&quot;
    } else if (OS.indexOf(&quot;win&quot;) &gt;= 0) {
        underlyingOS = &quot;windows&quot;
        profilePaths.removeAll { it.toLowerCase().endsWith(&apos;parallels&apos;) }
    } else if (OS.indexOf(&quot;nux&quot;) &gt;= 0) {
        underlyingOS = &quot;linux&quot;
    } else {
        underlyingOS = &quot;other&quot;
    }
    println(&quot;After OS and before sort()&quot;)

    profilePaths.sort()
    profilePaths = profilePaths.join(&quot;,&quot;)
    profilePaths = profilePaths.replaceAll(&quot;################&quot;, &quot;/&quot;)
    println(profilePaths)
    println(&quot;End of get_profiles.groovy GROOVY code&quot;)
} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (select_profile_and_check_prereqs.groovy): ${e}&quot;)
}

try {
    println(&quot;Entered check prerequisites - BEGINNING&quot;)

    //TODO - change this away from hardcoded user URL - current entry for debugging only
    def githubVersionJson = new JsonSlurper().parse(&apos;https://raw.githubusercontent.com/patdel76/kx/main/versions.json&apos;.toURL())
    githubKxVersion = githubVersionJson.kxascode
    githubKubeVersion = githubVersionJson.kubernetes

    def localVersionFile = &apos;jenkins_shared_workspace/kx.as.code/versions.json&apos;
    def localVersionJson = new File(localVersionFile)
    def parsedLocalVersionJson = new JsonSlurper().parse(localVersionJson)

    localKxVersion = parsedLocalVersionJson.kxascode
    localKubeVersion = parsedLocalVersionJson.kubernetes

    println(&quot;Check prerequisites - Before OS check&quot;)

    def OS = System.getProperty(&quot;os.name&quot;, &quot;generic&quot;).toLowerCase(Locale.ENGLISH);
    def virtualboxPath
    def vmwareWorkstationPath
    def vmwareVagrantWorkstationPlugin = &quot;vagrant-vmware-desktop&quot;
    def parallelsPath
    def parallelsVagrantPlugin = &quot;vagrant-parallels&quot;

    if ((OS.indexOf(&quot;mac&quot;) &gt;= 0) || (OS.indexOf(&quot;darwin&quot;) &gt;= 0)) {
        underlyingOS = &quot;darwin&quot;
        virtualboxPath = &quot;/Applications/VirtualBox.app/Contents/MacOS/VirtualBox&quot;
        vmwareWorkstationPath = &quot;/Applications/VMware Fusion.app/Contents/MacOS/VMware Fusion&quot;
        parallelsPath = &quot;/Applications/Parallels Desktop.app/Contents/MacOS/prl_client_app&quot;
    } else if (OS.indexOf(&quot;win&quot;) &gt;= 0) {
        underlyingOS = &quot;windows&quot;
        virtualboxPath = &quot;C:/Program Files/Oracle/VirtualBox/VirtualBox.exe&quot;
        vmwareWorkstationPath = &quot;C:/Program Files (x86)/VMware/VMware Workstation/vmware.exe&quot;
    } else if (OS.indexOf(&quot;nux&quot;) &gt;= 0) {
        underlyingOS = &quot;linux&quot;
        virtualboxPath = &quot;/usr/bin/VirtualBox&quot;
        vmwareWorkstationPath = &quot;/usr/bin/vmware&quot;
    } else {
        underlyingOS = &quot;other&quot;
    }

    println(&quot;Check prerequisites - After OS check&quot;)
    def systemCheckJsonFilePath = &apos;jenkins_shared_workspace/kx.as.code/system-check.json&apos;
    def systemCheckJsonFile = new File(systemCheckJsonFilePath)

    parallelsExecutableExists = &quot;&quot;
    if (underlyingOS == &quot;darwin&quot;) {
        File parallelsExecutable = new File(parallelsPath)
        parallelsExecutableExists = parallelsExecutable.exists()
    } else {
        parallelsExecutableExists = false
    }

    File vboxExecutable = new File(virtualboxPath)
    vboxExecutableExists = vboxExecutable.exists()

    File vmwareExecutable = new File(vmwareWorkstationPath)
    vmwareExecutableExists = vmwareExecutable.exists()

    vagrantPluginList = &apos;vagrant plugin list&apos;.execute().text
    vagrantPluginList = new String(vagrantPluginList).split(&apos;####n&apos;)

    for (vagrantPlugin in vagrantPluginList) {
        vagrantPluginSplit = vagrantPlugin.split(&quot; &quot;)
        vagrantPluginName = vagrantPluginSplit[0]
        vagrantPluginVersion = vagrantPluginSplit[1]
        if (vagrantPluginName == &quot;vagrant-vmware-desktop&quot;) {
            vagrantVmwarePluginInstalled = true
        } else if (vagrantPluginName == &quot;vagrant-parallels&quot;) {
            vagrantParallelsPluginInstalled = true
        }
    }

    def builder = new JsonBuilder()
    def jsonSlurper = new JsonSlurper()

    def vagrantJson = jsonSlurper.parseText(&apos;{ &quot;system&quot;: { &quot;vagrantVmwarePluginInstalled&quot;: &quot;&apos; + vagrantVmwarePluginInstalled + &apos;&quot;, &quot;vagrantParallelsPluginInstalled&quot;: &quot;&apos; + vagrantParallelsPluginInstalled + &apos;&quot;, &quot;parallelsExecutable&quot;: &quot;&apos; + parallelsExecutableExists + &apos;&quot;, &quot;vboxExecutable&quot;: &quot;&apos; + vboxExecutableExists + &apos;&quot;, &quot;vmwareExecutable&quot;: &quot;&apos; + vmwareExecutableExists + &apos;&quot;}}&apos;)

    println(&quot;vagrant: ${vagrantJson}&quot;)

    new File(&quot;jenkins_shared_workspace/kx.as.code/base-vm/boxes/&quot;).eachDir {boxDirectories &lt;&lt; it.name }
    println(boxDirectories)

    def boxDirectoryList = []
    def provider
    def version
    boxDirectories.eachWithIndex { boxDirectory, i -&gt;
        println boxDirectory
        println i
        boxProvider = boxDirectories[i].substring(0,boxDirectories[i].lastIndexOf(&quot;-&quot;))
        boxVersion = boxDirectories[i].substring(boxDirectories[i].substring(0,boxDirectories[i].lastIndexOf(&quot;-&quot;)).length()+1,boxDirectories[i].length())
        println(&quot;provider: ${boxProvider}, version: ${boxVersion}&quot;)

        new File(&quot;jenkins_shared_workspace/kx.as.code/base-vm/boxes/${boxDirectory}/&quot;).eachFile {boxDirectoryList &lt;&lt; it.name }
        boxDirectoryList.eachWithIndex { box, j -&gt;
            if (box.endsWith(&apos;.box&apos;)) {
                boxName = box.substring(0,box.lastIndexOf(&quot;-&quot;))
                println(&quot;provider: ${boxProvider}, box: ${boxName}, version: ${boxVersion}&quot;)
                if(boxName == &quot;kx-main&quot; || boxName == &quot;kx-node&quot;) {
                    boxesList.add(&apos;&quot;&apos; + boxName + &quot; &quot; + boxProvider + &quot; &quot; + boxVersion + &apos;&quot;&apos;)
                    if (boxName == &quot;kx-main&quot; &amp;&amp; boxProvider == &quot;virtualbox&quot;) {
                        virtualboxMainExists = &quot;true&quot;
                        virtualboxMainVersion = boxVersion
                    }
                    if (boxName == &quot;kx-node&quot; &amp;&amp; boxProvider == &quot;virtualbox&quot;) {
                        virtualboxNodeExists = &quot;true&quot;
                        virtualboxNodeVersion = boxVersion
                    }
                    if (boxName == &quot;kx-main&quot; &amp;&amp; boxProvider == &quot;vmware-desktop&quot;) {
                        vmwareMainExists = &quot;true&quot;
                        vmwareMainVersion = boxVersion

                    }
                    if (boxName == &quot;kx-node&quot; &amp;&amp; boxProvider == &quot;vmware-desktop&quot;) {
                        vmwareNodeExists = &quot;true&quot;
                        vmwareNodeVersion = boxVersion

                    }
                    if (boxName == &quot;kx-main&quot; &amp;&amp; boxProvider == &quot;parallels&quot;) {
                        parallelsMainExists = &quot;true&quot;
                        parallelsMainVersion = boxVersion

                    }
                    if (boxName == &quot;kx-node&quot; &amp;&amp; boxProvider == &quot;parallels&quot;) {
                        parallelsNodeExists = &quot;true&quot;
                        parallelsNodeVersion = boxVersion
                    }
                }
            }
        }
    }
    println(boxesList)
    println(&quot;All boxes: &quot; + boxesList)
    println(&quot;0: &quot; + boxesList[0])
    println(&quot;1: &quot; + boxesList[1])

    def boxesJson = jsonSlurper.parseText(&apos;{ &quot;boxes&quot;: { &quot;virtualboxMainExists&quot;: &quot;&apos; + virtualboxMainExists + &apos;&quot;, &quot;virtualboxMainVersion&quot;: &quot;&apos; + virtualboxMainVersion + &apos;&quot;, &quot;virtualboxNodeExists&quot;: &quot;&apos; + virtualboxNodeExists + &apos;&quot;, &quot;virtualboxNodeVersion&quot;: &quot;&apos; + virtualboxNodeVersion + &apos;&quot;, &quot;vmwareMainExists&quot;: &quot;&apos; + vmwareMainExists + &apos;&quot;, &quot;vmwareMainVersion&quot;: &quot;&apos; + vmwareMainVersion + &apos;&quot;, &quot;vmwareNodeExists&quot;: &quot;&apos; + vmwareNodeExists + &apos;&quot;, &quot;vmwareNodeVersion&quot;: &quot;&apos; + vmwareNodeVersion + &apos;&quot;, &quot;parallelsMainExists&quot;: &quot;&apos; + parallelsMainExists + &apos;&quot;, &quot;parallelsMainVersion&quot;: &quot;&apos; + parallelsMainVersion + &apos;&quot;, &quot;parallelsNodeExists&quot;: &quot;&apos; + parallelsNodeExists + &apos;&quot;, &quot;parallelsNodeVersion&quot;: &quot;&apos; + parallelsNodeVersion + &apos;&quot;}}&apos;)

    println(boxesJson)

    try {
        builder boxesJson
        builder vagrantJson

        def mergedJson = boxesJson + vagrantJson

        builder mergedJson

        println builder.toPrettyString()

        new File(systemCheckJsonFilePath).write(builder.toPrettyString())
    } catch (e) {
        println(&quot;Error creating and writing system check JSON file: &quot; + e)
    }

    //println(&quot;existingBoxes&quot; + existingBoxes)
    println(&quot;Check prerequisites - END&quot;)

} catch(e) {
    println &quot;Something went wrong in the GROOVY block (select_profile_and_check_prereqs.groovy): ${e}&quot;
}


try {
    // language=HTML
    def HTML = &quot;&quot;&quot;
      &lt;script&gt;
            function getLocalKxVersion() {
                let localKxVersion = &quot;${localKxVersion}&quot;;
                return localKxVersion;
            }

            function getGithubKxVersion() {
                let githubKxVersion = &quot;${githubKxVersion}&quot;;
            }

            function getLocalKubeVersion() {
                let localKubeVersion = &quot;${localKubeVersion}&quot;;
            }

            function getGithubKubeVersion() {
                 let githubKubeVersion = &quot;${githubKubeVersion}&quot;;
            }

            function getProfilePaths() {
                let profilePaths = &quot;${profilePaths}&quot;;
                return profilePaths;
            }

          function getAvailableBoxes() {
              console.log(&quot;DEBUG: getAvailableBoxes()&quot;);
              let boxMainVersion;
              let boxNodeVersion;
              let selectedProfile = document.getElementById(&quot;profiles&quot;).value;
              try {
                  console.log(&quot;Selected profile: &quot; + selectedProfile);
                  switch (selectedProfile) {
                      case &quot;virtualbox&quot;:
                          boxMainVersion = &quot;${virtualboxMainVersion}&quot;;
                          boxNodeVersion = &quot;${virtualboxNodeVersion}&quot;;
                          break;
                      case &quot;vmware-desktop&quot;:
                          boxMainVersion = &quot;${vmwareMainVersion}&quot;;
                          boxNodeVersion = &quot;${vmwareNodeVersion}&quot;;
                          break;
                      case &quot;parallels&quot;:
                          boxMainVersion = &quot;${parallelsMainVersion}&quot;;
                          boxNodeVersion = &quot;${parallelsNodeVersion}&quot;;
                          break;
                      default:
                          console.log(&quot;Weird, box type not known. Normally the box type is either VirtualBox, VMWare or Parallels&quot;);
                  }
                  console.log(&apos;boxMainVersion: &apos; + boxMainVersion);
                  console.log(&apos;boxNodeVersion: &apos; + boxNodeVersion);
                  if ( boxMainVersion !== &quot;null&quot; ) {
                    document.getElementById(&quot;kx-main-version&quot;).innerHTML = boxMainVersion;
                    document.getElementById(&quot;main-version-status-svg&quot;).src = &quot;/userContent/icons/checkbox-marked-circle-outline.svg&quot;;
                    document.getElementById(&quot;main-version-status-svg&quot;).className = &quot;checklist-status-icon svg-bright-green&quot;;
                  } else {
                    document.getElementById(&quot;kx-main-version&quot;).innerHTML = &quot;&lt;i&gt;Not found&lt;/i&gt;&quot;;
                    document.getElementById(&quot;main-version-status-svg&quot;).src = &quot;/userContent/icons/alert-outline.svg&quot;;
                    document.getElementById(&quot;main-version-status-svg&quot;).className = &quot;checklist-status-icon svg-orange-red&quot;;
                  }

                  if ( boxNodeVersion !== &quot;null&quot; ) {
                      document.getElementById(&quot;kx-node-version&quot;).innerHTML = boxNodeVersion;
                      document.getElementById(&quot;node-version-status-svg&quot;).src = &quot;/userContent/icons/checkbox-marked-circle-outline.svg&quot;;
                      document.getElementById(&quot;node-version-status-svg&quot;).className = &quot;checklist-status-icon svg-bright-green&quot;;
                  } else {
                      document.getElementById(&quot;kx-node-version&quot;).innerHTML = &quot;&lt;i&gt;Not found&lt;/i&gt;&quot;;
                      document.getElementById(&quot;node-version-status-svg&quot;).src = &quot;/userContent/icons/alert-outline.svg&quot;;
                      document.getElementById(&quot;node-version-status-svg&quot;).className = &quot;checklist-status-icon svg-orange-red&quot;;
                      document.getElementById(&apos;standalone-mode-toggle&apos;).value = &quot;true&quot;;
                      document.getElementById(&apos;workloads_on_master_checkbox&apos;).value = &quot;true&quot;;
                  }

              } catch(e) {
                    console.log(&quot;Error getting box versions: &quot; + e);
              }
          }

          function checkVagrantPreRequisites() {
              console.log(&quot;DEBUG: Inside checkVagrantPreRequisites&quot;);
              let selectedProfile = document.getElementById(&quot;profiles&quot;).value;
              let virtualizationExecutableExists = &quot;&quot;;
              let vagrantPluginInstalled = &quot;&quot;;

              if ( selectedProfile === &quot;virtualbox&quot; ) {
                  virtualizationExecutableExists = &quot;${vboxExecutableExists}&quot;;
                  vagrantPluginInstalled = &quot;true&quot;;
              } else if ( selectedProfile === &quot;vmware-desktop&quot; ) {
                  virtualizationExecutableExists = &quot;${vmwareExecutableExists}&quot;;
                  vagrantPluginInstalled = &quot;${vagrantVmwarePluginInstalled}&quot;;
              } else if ( selectedProfile === &quot;parallels&quot; ) {
                  virtualizationExecutableExists = &quot;${parallelsExecutableExists}&quot;;
                  vagrantPluginInstalled = &quot;${vagrantParallelsPluginInstalled}&quot;;
              }

              if ( virtualizationExecutableExists === &quot;true&quot; ) {
                  document.getElementById(&quot;virtualization-svg&quot;).className = &quot;checklist-status-icon svg-bright-green&quot;;
                  document.getElementById(&quot;virtualization-svg&quot;).src = &quot;/userContent/icons/checkbox-marked-circle-outline.svg&quot;;
                  document.getElementById(&quot;virtualization-text&quot;).innerHTML = selectedProfile + &quot; is installed&quot;;
              } else {
                  document.getElementById(&quot;virtualization-svg&quot;).className = &quot;checklist-status-icon svg-orange-red&quot;;
                  document.getElementById(&quot;virtualization-svg&quot;).src = &quot;/userContent/icons/alert-outline.svg&quot;;
                  document.getElementById(&quot;virtualization-text&quot;).innerHTML = selectedProfile + &quot; could not be found&quot;;
              }

              if ( vagrantPluginInstalled  === &quot;true&quot; ) {
                  document.getElementById(&quot;vagrant-plugin-svg&quot;).className = &quot;checklist-status-icon svg-bright-green&quot;;
                  document.getElementById(&quot;vagrant-plugin-svg&quot;).src = &quot;/userContent/icons/checkbox-marked-circle-outline.svg&quot;;
                  document.getElementById(&quot;vagrant-plugin-text&quot;).innerHTML = &quot;The required Vagrant plugin is installed&quot;;
              } else {
                  document.getElementById(&quot;vagrant-plugin-svg&quot;).className = &quot;checklist-status-icon svg-orange-red&quot;;
                  document.getElementById(&quot;vagrant-plugin-svg&quot;).src = &quot;/userContent/icons/alert-outline.svg&quot;;
                  document.getElementById(&quot;vagrant-plugin-text&quot;).innerHTML = &quot;The required Vagrant plugin could not be located&quot;;
              }
          }

          function updateProfileSelection() {
              let selectedProfile = document.getElementById(&quot;profiles&quot;).value;
              let parallelsExecutableExists = &quot;${parallelsExecutableExists}&quot;;
              let vboxExecutableExists = &quot;${vboxExecutableExists}&quot;;
              let vmwareExecutableExists = &quot;${vmwareExecutableExists}&quot;;
              let vboxVagrantPluginInstalled = &quot;true&quot;;
              let vmwareVagrantPluginInstalled = &quot;${vagrantVmwarePluginInstalled}&quot;;
              let parallelsPluginInstalled = &quot;${vagrantParallelsPluginInstalled}&quot;;
              let virtualboxMainExists = &quot;${virtualboxMainExists}&quot;;
              let virtualboxNodeExists = &quot;${virtualboxNodeExists}&quot;;
              let vmwareMainExists = &quot;${vmwareMainExists}&quot;;
              let vmwareNodeExists = &quot;${vmwareNodeExists}&quot;;
              let parallelsMainExists = &quot;${parallelsMainExists}&quot;;
              let parallelsNodeExists = &quot;${parallelsNodeExists}&quot;;
              console.log(&quot;DEBUG: Selected profile: &quot; + selectedProfile);
              let defaultProfile = &quot;&quot;;
              let prerequisitesCheckResult = &quot;&quot;;
              let selectedProfileCheckResult = &quot;&quot;;
              if (sessionStorage.getItem(&apos;hasCodeRunBefore&apos;) === null) {
                  if ( vboxExecutableExists === &quot;true&quot; &amp;&amp; vboxVagrantPluginInstalled === &quot;true&quot; &amp;&amp; virtualboxMainExists === &quot;true&quot; &amp;&amp; virtualboxNodeExists === &quot;true&quot;) {
                      defaultProfile = &quot;virtualbox&quot;;
                      if (selectedProfile === &quot;virtualbox&quot;) { selectedProfileCheckResult = &quot;full&quot;; }
                      prerequisitesCheckResult = &quot;full&quot;;
                  } else if ( vmwareExecutableExists === &quot;true&quot; &amp;&amp; vmwareVagrantPluginInstalled === &quot;true&quot; &amp;&amp; vmwareMainExists === &quot;true&quot; &amp;&amp; vmwareNodeExists === &quot;true&quot; ) {
                      defaultProfile = &quot;vmware-desktop&quot;;
                      prerequisitesCheckResult = &quot;full&quot;;
                  } else if ( parallelsExecutableExists === &quot;true&quot; &amp;&amp; parallelsPluginInstalled === &quot;true&quot; &amp;&amp; parallelsMainExists === &quot;true&quot; &amp;&amp; parallelsNodeExists === &quot;true&quot; ) {
                      defaultProfile = &quot;parallels&quot;;
                      prerequisitesCheckResult = &quot;full&quot;;
                  } else if ( vboxExecutableExists === &quot;true&quot; &amp;&amp; vboxVagrantPluginInstalled === &quot;true&quot; &amp;&amp; virtualboxMainExists === &quot;true&quot; ) {
                      defaultProfile = &quot;virtualbox&quot;;
                      prerequisitesCheckResult = &quot;standalone&quot;;
                  } else if ( vmwareExecutableExists === &quot;true&quot; &amp;&amp; vmwareVagrantPluginInstalled === &quot;true&quot; &amp;&amp; vmwareMainExists === &quot;true&quot; ) {
                      defaultProfile = &quot;vmware-desktop&quot;;
                      prerequisitesCheckResult = &quot;standalone&quot;;
                  } else if ( parallelsExecutableExists === &quot;true&quot; &amp;&amp; parallelsPluginInstalled === &quot;true&quot; &amp;&amp; parallelsMainExists === &quot;true&quot; ) {
                      defaultProfile = &quot;parallels&quot;;
                      prerequisitesCheckResult = &quot;standalone&quot;;
                  } else {
                      console.log(&quot;DEBUG: Inside else DEFAULT block&quot;);
                      prerequisitesCheckResult = &quot;failed&quot;;
                  }

                  console.log(&quot;default profile will be set to &quot; + defaultProfile);
                  document.getElementById(&quot;profiles&quot;).value = defaultProfile;

                  // Pre-requisite value must be either &quot;full&quot;, &quot;standalone&quot; or &quot;failed&quot;
                  document.getElementById(&quot;system-prerequisites-check&quot;).value = prerequisitesCheckResult;
                  sessionStorage.hasCodeRunBefore = true;
              }
              if (sessionStorage.getItem(&apos;hasCodeRunBefore&apos;) !== null) {
                  if ( selectedProfile === &quot;virtualbox&quot; &amp;&amp; vboxExecutableExists === &quot;true&quot; &amp;&amp; vboxVagrantPluginInstalled === &quot;true&quot; &amp;&amp; virtualboxMainExists === &quot;true&quot; &amp;&amp; virtualboxNodeExists === &quot;true&quot;) {
                      selectedProfileCheckResult = &quot;full&quot;;
                  } else if ( selectedProfile === &quot;vmware-desktop&quot; &amp;&amp; vmwareExecutableExists === &quot;true&quot; &amp;&amp; vmwareVagrantPluginInstalled === &quot;true&quot; &amp;&amp; vmwareMainExists === &quot;true&quot; &amp;&amp; vmwareNodeExists === &quot;true&quot; ) {
                      selectedProfileCheckResult = &quot;full&quot;;
                  } else if ( selectedProfile === &quot;parallels&quot; &amp;&amp; parallelsExecutableExists === &quot;true&quot; &amp;&amp; parallelsPluginInstalled === &quot;true&quot; &amp;&amp; parallelsMainExists === &quot;true&quot; &amp;&amp; parallelsNodeExists === &quot;true&quot; ) {
                      selectedProfileCheckResult = &quot;full&quot;;
                  } else if ( selectedProfile === &quot;virtualbox&quot; &amp;&amp; vboxExecutableExists === &quot;true&quot; &amp;&amp; vboxVagrantPluginInstalled === &quot;true&quot; &amp;&amp; virtualboxMainExists === &quot;true&quot; ) {
                      selectedProfileCheckResult = &quot;standalone&quot;
                  } else if ( selectedProfile === &quot;vmware-desktop&quot; &amp;&amp; vmwareExecutableExists === &quot;true&quot; &amp;&amp; vmwareVagrantPluginInstalled === &quot;true&quot; &amp;&amp; vmwareMainExists === &quot;true&quot; ) {
                      selectedProfileCheckResult = &quot;standalone&quot;;
                  } else if ( selectedProfile === &quot;parallels&quot; &amp;&amp; parallelsExecutableExists === &quot;true&quot; &amp;&amp; parallelsPluginInstalled === &quot;true&quot; &amp;&amp; parallelsMainExists === &quot;true&quot; ) {
                      selectedProfileCheckResult = &quot;standalone&quot;;
                  } else {
                      console.log(&quot;DEBUG: Inside else SELECTED block&quot;);
                      selectedProfileCheckResult = &quot;failed&quot;;
                  }

                  // Pre-requisite value must be either &quot;full&quot;, &quot;standalone&quot; or &quot;failed&quot;
                  document.getElementById(&quot;system-prerequisites-check&quot;).value = selectedProfileCheckResult;
                  console.log(&quot;selected profile prerequisite check result: &quot; + selectedProfileCheckResult);

              }
              change_panel_selection(&apos;config-panel-profile-selection&apos;);
          }
      &lt;/script&gt;
    &lt;body&gt;
        &lt;div id=&quot;headline-select-profile-div&quot; style=&quot;display: none;&quot;&gt;
        &lt;h1&gt;Select Profile &amp; Check Pre-Requisites&lt;/h1&gt;
        &lt;span class=&quot;description-paragraph-span&quot;&gt;&lt;p&gt;${extendedDescription}&lt;/p&gt;&lt;/span&gt;
        &lt;/div&gt;
        &lt;div id=&quot;select-profile-div&quot; style=&quot;display: none;&quot;&gt;
            &lt;br&gt;
            &lt;label for=&quot;profiles&quot; class=&quot;input-box-label&quot; style=&quot;margin: 0px;&quot;&gt;Profiles&lt;/label&gt;
            &lt;select id=&quot;profiles&quot; class=&quot;profiles-select capitalize&quot; value=&quot;Virtualbox&quot; onchange=&quot;update_selected_value(); getAvailableBoxes(); compareVersions(); checkVagrantPreRequisites(); updateProfileSelection();&quot;&gt;
            &lt;/select&gt;
            &lt;/label&gt;
        &lt;/div&gt;
        &lt;input type=&quot;hidden&quot; id=&quot;selected-profile-path&quot; name=&quot;value&quot; value=&quot;&quot;&gt;
        &lt;style scoped=&quot;scoped&quot; onload=&quot;populate_profile_option_list();&quot;&gt;   &lt;/style&gt;

        &lt;div id=&quot;prerequisites-div&quot; style=&quot;display: none;&quot;&gt;
            &lt;br&gt;
            &lt;h2&gt;Pre-requisite Checks&lt;/h2&gt;
            &lt;div span style=&quot;width: 1100px; height: 100px; display: flex;&quot;&gt;
            &lt;span style=&quot;width: 680px; height: 100px; display: inline-block;&quot;&gt;
                &lt;span style=&quot;height: 33px;&quot;&gt;&lt;h4&gt;Virtualization Pre-Requisites&lt;/h4&gt;&lt;/span&gt;
                &lt;div&gt;&lt;span class=&quot;checklist-span&quot;&gt;&lt;img src=&quot;&quot; id=&quot;virtualization-svg&quot; class=&quot;&quot; style=&quot;height: 33px;&quot; alt=&quot;virtualization-svg&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;virtualization-text&quot; class=&quot;checklist-span&quot; style=&quot;width: 300px;display:inline-block;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;checklist-span&quot;&gt;&lt;img src=&quot;&quot; id=&quot;main-version-status-svg&quot; class=&quot;&quot; alt=&quot;main-version-status-svg&quot; /&gt;&lt;/span&gt;&lt;span&gt;KX-Main Box Version: v&lt;/span&gt;&lt;span id=&quot;kx-main-version&quot; class=&quot;checklist-span&quot;&gt;&lt;/span&gt;&lt;/div&gt;
                &lt;div&gt;&lt;span class=&quot;checklist-span&quot;&gt;&lt;img src=&quot;&quot; id=&quot;vagrant-plugin-svg&quot; class=&quot;&quot; style=&quot;height: 33px;&quot; alt=&quot;vagrant-plugin-svg&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;vagrant-plugin-text&quot; class=&quot;checklist-span&quot; style=&quot;width: 300px;display:inline-block;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;checklist-span&quot;&gt;&lt;img src=&quot;&quot; id=&quot;node-version-status-svg&quot; class=&quot;&quot; alt=&quot;node-version-status-svg&quot; /&gt;&lt;/span&gt;&lt;span&gt;KX-Node Box Version: v&lt;/span&gt;&lt;span id=&quot;kx-node-version&quot; class=&quot;checklist-span&quot;&gt;&lt;/span&gt;&lt;/div&gt;
            &lt;/span&gt;
            &lt;span style=&quot;width: 400px; height: 100px; display: inline-block;&quot;&gt;
                &lt;span style=&quot;height: 33px;&quot;&gt;&lt;h4&gt;KX.AS.CODE Source&lt;/h4&gt;&lt;/span&gt;
                &lt;div&gt;&lt;span class=&quot;checklist-span&quot; style=&quot;width: 35px; height: 66px; display: inline-block; vertical-align: top;&quot;&gt;&lt;img src=&quot;&quot; id=&quot;version-check-svg&quot; class=&quot;&quot; alt=&quot;version-check-svg&quot; /&gt;&lt;/span&gt;&lt;span class=&quot;checklist-span&quot; style=&quot;width: 350px; height: 66px; display: inline-block; vertical-align: top;&quot; id=&quot;version-check-message&quot;&gt;&lt;/span&gt;&lt;/div&gt;
            &lt;/span&gt;
            &lt;/div&gt;

            &lt;style scoped=&quot;scoped&quot; onload=&quot;getAvailableBoxes(); compareVersions(); checkVagrantPreRequisites(); updateProfileSelection(); change_panel_selection(&apos;config-panel-profile-selection&apos;);&quot;&gt;   &lt;/style&gt;
            &lt;input type=&quot;hidden&quot; id=&quot;system-prerequisites-check&quot; name=&quot;system-prerequisites-check&quot; value=&quot;&quot;&gt;
        &lt;/div&gt;

        &lt;div id=&quot;profile-builds-div&quot; style=&quot;display: none;&quot;&gt;
            &lt;br&gt;&lt;br&gt;

            &lt;div class=&quot;div-border-text-inline&quot;&gt;
                &lt;h2 class=&quot;h2-header-in-line&quot;&gt;&lt;span class=&quot;span-h2-header-in-line&quot;&gt;🚧 Build VM images&lt;/&lt;/span&gt;&lt;/h2&gt;
                &lt;div class=&quot;div-inner-h2-header-in-line-wrapper&quot;&gt;
                &lt;span class=&quot;description-paragraph-span&quot;&gt;&lt;p&gt;Below you can see the last executed builds for each image tpe if there were any. If none, then click the play button for each type of node.&lt;/p&gt;&lt;/span&gt;
                &lt;div style=&quot;width: 100°°°°;&quot;&gt;
                    &lt;span style=&quot;width: 940px;&quot;&gt;
                        &lt;span class=&quot;build-action-text-label&quot; style=&quot;width: 150px&quot;&gt;KX-Main Build Date: &lt;/span&gt;&lt;span id=&quot;kx-main-build-timestamp&quot; class=&quot;build-action-text-value&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;build-action-text-label&quot; style=&quot;width: 100px;&quot;&gt;Build Status: &lt;/span&gt;&lt;span id=&quot;kx-main-build-result&quot; class=&quot;build-action-text-value build-action-text-value-result&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;build-action-text-label&quot; style=&quot;width: 100px; margin-left: 5px;&quot;&gt;Build Version: &lt;/span&gt;&lt;span id=&quot;kx-main-build-kx-version&quot; style=&quot;width: 50px;&quot; class=&quot;build-action-text-value build-action-text-value-result&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;build-action-text-label&quot; style=&quot;width: 100px;&quot;&gt;Kube Version: &lt;/span&gt;&lt;span id=&quot;kx-main-build-kube-version&quot; style=&quot;width: 100px;&quot; class=&quot;build-action-text-value build-action-text-value-result&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;build-number-span&quot; id=&quot;kx-main-build-number-link&quot;&gt;&lt;/span&gt;
                    &lt;/span&gt;
                    &lt;span class=&apos;span-rounded-border&apos;&gt;
                        &lt;img src=&apos;/userContent/icons/play.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Start Build&quot; alt=&quot;Start Build&quot; onclick=&apos;triggerBuild(&quot;kx-main&quot;);&apos; /&gt;|
                        &lt;img src=&apos;/userContent/icons/cancel.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Cancel Build&quot; alt=&quot;Cancel Build&quot; onclick=&apos;stopTriggeredBuild(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-main&quot;);&apos; /&gt;|
                        &lt;img src=&apos;/userContent/icons/refresh.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Refresh Data&quot; alt=&quot;Refresh Data&quot; onclick=&apos;getBuildJobListForProfile(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-main&quot;);&apos; /&gt;|
                        &lt;div class=&quot;console-log&quot;&gt;&lt;span class=&quot;console-log-span&quot;&gt;&lt;img src=&quot;/userContent/icons/text-box-outline.svg&quot; onMouseover=&apos;showConsoleLog(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-main&quot;);&apos; onclick=&apos;openFullConsoleLog(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-main&quot;);&apos; class=&quot;build-action-icon&quot; alt=&quot;View Build Log&quot; title=&quot;Click to open full log in new tab&quot;&gt;&lt;span class=&quot;consolelogtext&quot; id=&apos;kxMainBuildConsoleLog&apos;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
                    &lt;/span&gt;
                &lt;/div&gt;
                &lt;div style=&quot;width: 100°°°°;&quot;&gt;
                    &lt;span style=&quot;width: 940px;&quot;&gt;
                        &lt;span class=&quot;build-action-text-label&quot; style=&quot;width: 150px&quot;&gt;KX-Node Build Date: &lt;/span&gt;&lt;span id=&quot;kx-node-build-timestamp&quot; class=&quot;build-action-text-value&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;build-action-text-label&quot; style=&quot;width: 100px;&quot;&gt;Build Status: &lt;/span&gt;&lt;span id=&quot;kx-node-build-result&quot; class=&quot;build-action-text-value build-action-text-value-result&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;build-action-text-label&quot; style=&quot;width: 100px; margin-left: 5px;&quot;&gt;Build Version: &lt;/span&gt;&lt;span id=&quot;kx-node-build-kx-version&quot; style=&quot;width: 50px;&quot; class=&quot;build-action-text-value build-action-text-value-result&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;build-action-text-label&quot; style=&quot;width: 100px;&quot;&gt;Kube Version: &lt;/span&gt;&lt;span id=&quot;kx-node-build-kube-version&quot; style=&quot;width: 100px;&quot; class=&quot;build-action-text-value build-action-text-value-result&quot;&gt;&lt;/span&gt;                        &lt;span class=&quot;build-number-span&quot; id=&quot;kx-node-build-number-link&quot;&gt;&lt;/span&gt;
                    &lt;/span&gt;
                    &lt;span class=&apos;span-rounded-border&apos;&gt;
                        &lt;img src=&apos;/userContent/icons/play.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Start Build&quot; alt=&quot;Start Build&quot; onclick=&apos;triggerBuild(&quot;kx-node&quot;);&apos; /&gt;|
                        &lt;img src=&apos;/userContent/icons/cancel.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Cancel Build&quot; alt=&quot;Cancel Build&quot; onclick=&apos;stopTriggeredBuild(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-node&quot;);&apos; /&gt;|
                        &lt;img src=&apos;/userContent/icons/refresh.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Refresh Data&quot; alt=&quot;Refresh Data&quot; onclick=&apos;getBuildJobListForProfile(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-node&quot;);&apos; /&gt;|
                        &lt;div class=&quot;console-log&quot;&gt;&lt;span class=&quot;console-log-span&quot;&gt;&lt;img src=&quot;/userContent/icons/text-box-outline.svg&quot; onMouseover=&apos;showConsoleLog(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-node&quot;);&apos; onclick=&apos;openFullConsoleLog(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-node&quot;);&apos; class=&quot;build-action-icon&quot; alt=&quot;View Build Log&quot; title=&quot;Click to open full log in new tab&quot;&gt;&lt;span class=&quot;consolelogtext&quot; id=&apos;kxNodeBuildConsoleLog&apos;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
                    &lt;/span&gt;
                &lt;/div&gt;
                &lt;!--&lt;style scoped=&quot;scoped&quot; onload=&quot;getBuildJobListForProfile(&apos;kx-main&apos;); getBuildJobListForProfile(&apos;kx-node&apos;);&quot;&gt;   &lt;/style&gt;--&gt;
                &lt;style scoped=&apos;scoped&apos; onload=&apos;getBuildJobListForProfile(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-main&quot;); getBuildJobListForProfile(&quot;KX.AS.CODE_Image_Builder&quot;, &quot;kx-node&quot;);&apos;&gt;   &lt;/style&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/body&gt;
    &quot;&quot;&quot;
    return HTML
} catch (e) {
    println &quot;Something went wrong in the HTML return block (select_profile_and_check_prereqs.groovy): ${e}&quot;
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>GENERAL_PARAMETERS</name>
          <randomName>choice-parameter-100850523030854</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>import groovy.json.JsonSlurper

def infoTextBaseDomain
def infoTextBaseUser
def infoTextEnvironmentPrefix
def infoTextBasePassword
def config_baseDomain
def config_environmentPrefix
def config_baseUser
def config_basePassword
def generalParamsExtendedDescription

println(&quot;DEBUG Missing Var: ${PROFILE}&quot;)

try {
    def jsonFilePath = PROFILE
    def inputFile = new File(jsonFilePath)
    parsedJson = new JsonSlurper().parse(inputFile)
} catch(e) {
    println &quot;Something went wrong in the GROOVY block (general_parameters.groovy): ${e}&quot;
}

try {
    infoTextBaseDomain = &quot;&lt;p class=&apos;info-text-header&apos;&gt;[do‧ma‧in] /d̪oˈmaɪn/&lt;/p&gt;&lt;p class=&apos;info-text-body&apos;&gt;This describes the domain name that all deployed services will be reachable by. Default is &amp;quot;kx-as-code.local&amp;quot;&lt;/p&gt;&quot;
    infoTextBaseUser = &quot;&lt;p class=&apos;info-text-header&apos;&gt;[us‧er] /ˈjuːzə/&lt;/p&gt;&lt;p class=&apos;info-text-body&apos;&gt;The initial admin user for the base workstation. Default is &amp;quot;kx.hero&amp;quot;&quot;
    infoTextEnvironmentPrefix = &quot;&lt;p class=&apos;info-text-header&apos;&gt;[team] /tiːm/&lt;/p&gt;&lt;p class=&apos;info-text-body&apos;&gt;The additional sub-domain prepended to the base domain. This ensures separation where there are multiple deployments&quot;
    infoTextBasePassword = &quot;&lt;p class=&apos;info-text-header&apos;&gt;[pass‧word] /pæswɜːɹd/&lt;/p&gt;&lt;p class=&apos;info-text-body&apos;&gt;The initial password for the base workstation. Default is &amp;quot;L3arnandshare&amp;quot;&quot;

    config_baseDomain = parsedJson.config.baseDomain
    config_environmentPrefix = parsedJson.config.environmentPrefix
    config_baseUser = parsedJson.config.baseUser
    config_basePassword = parsedJson.config.basePassword

    generalParamsExtendedDescription = &quot;In this panel you set the parameters that define how the internal DNS of KX.AS.CODE will be configured. Each new service that is provisioned in KX.AS.CODE will have the fully qualified domain name (FQDN) of &lt;service_name&gt;.&lt;team_name&gt;.&lt;base_domain&gt;. The username and password fields determine the base admin user password. It is possible to add additional users. In the last section, you determine if running in standalone or cluster mode. Standalone mode starts up one main node only. This is recommended for any physical environment with less than 16G ram. If enable worker nodes,then you can also choose to have workloads running on both main and worker nodes, or only on worker nodes.&quot;

} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (general_parameters.groovy): ${e}&quot;)
}

def infoTextStandaloneMode
def infoTextWorkloadOnMaster
def standaloneModeExtendedDescription


/*println(&quot;PREREQUISITES_CHECK: *${PREREQUISITES_CHECK}*&quot;)

if (PREREQUISITES_CHECK != &quot;failed&quot;) {
    try {
        if (PREREQUISITES_CHECK == &quot;standalone&quot;) {
            standaloneMode = true
            cssClass = &quot;checkbox-slider-checked-disabled round&quot;
            println(&quot;Inside standalone = true...&quot;)
        } else {
            println(&quot;Inside standalone = false...&quot;)
            standaloneMode = parsedJson.config.standaloneMode
            allowWorkloadsOnMaster = parsedJson.config.allowWorkloadsOnMaster
            cssClass = &quot;checkbox-slider round&quot;
        }

    } catch (e) {
        println(&quot;Something went wrong in the GROOVY block (general_parameters.groovy): ${e}&quot;)
    }
*/

infoTextStandaloneMode = &quot;Determines whether to run with a single main node or node. This will automatically set KX-Workers to zero, Kx-Main to 1, and ensure allow-workloads on master is set to 1&quot;
infoTextWorkloadOnMaster = &quot;Determines the number of KX-Main nodes that will be provisioned in the cluster&quot;
standaloneModeExtendedDescription = &quot;If you set standalone mode to true, then the number of main nodes is automatically set to 1, and worked nodes set to 0 and disabled completely. If you have only build the main Vagrant box so far, then standalone mode will be enabled automatically&quot;

try {
    // language=HTML
    def HTML = &quot;&quot;&quot;
    &lt;div id=&quot;general-parameters-div&quot; style=&quot;display: none;&quot;&gt;
        &lt;h1&gt;General Parameters and Mode Selection&lt;/h1&gt;
        &lt;span class=&quot;description-paragraph-span&quot;&gt;&lt;p&gt;${generalParamsExtendedDescription}&lt;/p&gt;&lt;/span&gt;
        &lt;h2&gt;General Profile Parameters&lt;/h2&gt;
        &lt;div class=&quot;input-box-div&quot;&gt;
            &lt;span class=&quot;input-box-span&quot;&gt;
                &lt;label for=&quot;general-param-base-domain&quot; class=&quot;input-box-label&quot;&gt;Base Domain&lt;/label&gt;
                &lt;input class=&quot;input-box&quot; id=&quot;general-param-base-domain&quot; type=&quot;text&quot; placeholder=&quot;${config_baseDomain}&quot; value=&quot;${config_baseDomain}&quot; onchange=&quot;updateConcatenatedGeneralParamsReturnVariable();&quot;&gt;
                &lt;div class=&quot;tooltip-info&quot;&gt;&lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;info&quot;&gt;&lt;span class=&quot;tooltiptext&quot;&gt;${infoTextBaseDomain}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
            &lt;/span&gt;
            &lt;span class=&quot;input-box-span&quot;&gt;
                &lt;label for=&quot;general-param-username&quot; class=&quot;input-box-label&quot;&gt;Username&lt;/label&gt;
                &lt;input class=&quot;input-box&quot; id=&quot;general-param-username&quot; type=&quot;text&quot; placeholder=&quot;${config_baseUser}&quot; value=&quot;${config_baseUser}&quot; onchange=&quot;updateConcatenatedGeneralParamsReturnVariable();&quot;&gt;
                &lt;div class=&quot;tooltip-info&quot;&gt;&lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;info&quot;&gt;&lt;span class=&quot;tooltiptext&quot;&gt;${infoTextBaseUser}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
            &lt;/span&gt;
        &lt;/div&gt;
        &lt;div class=&quot;input-box-div&quot;&gt;
            &lt;span class=&quot;input-box-span&quot;&gt;
                &lt;label for=&quot;general-param-team-name&quot; class=&quot;input-box-label&quot;&gt;Team Name&lt;/label&gt;
                &lt;input class=&quot;input-box&quot; id=&quot;general-param-team-name&quot; type=&quot;text&quot; placeholder=&quot;${config_environmentPrefix}&quot; value=&quot;${config_environmentPrefix}&quot; onchange=&quot;updateConcatenatedGeneralParamsReturnVariable();&quot;&gt;
                &lt;div class=&quot;tooltip-info&quot;&gt;&lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;info&quot;&gt;&lt;span class=&quot;tooltiptext&quot;&gt;${infoTextEnvironmentPrefix}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
            &lt;/span&gt;
            &lt;span class=&quot;input-box-span&quot;&gt;
                &lt;label for=&quot;general-param-password&quot; class=&quot;input-box-label&quot;&gt;Password&lt;/label&gt;
                &lt;input class=&quot;input-box&quot; id=&quot;general-param-password&quot; type=&quot;password&quot; placeholder=&quot;${config_basePassword}&quot; value=&quot;${config_basePassword}&quot; onchange=&quot;updateConcatenatedGeneralParamsReturnVariable();&quot;&gt;
                &lt;div class=&quot;tooltip-info&quot;&gt;&lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;info&quot;&gt;&lt;span class=&quot;tooltiptext&quot;&gt;${infoTextBasePassword}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
            &lt;/span&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;div id=&quot;standalone-toggle-div&quot; style=&quot;display: none;&quot;&gt;
    &lt;br&gt;&lt;br&gt;
        &lt;h2&gt;Standalone or Cluster Mode&lt;/h2&gt;
        &lt;p&gt;
        ${standaloneModeExtendedDescription}
        &lt;/p&gt;
        &lt;div class=&quot;wrapper&quot;&gt;
            &lt;span class=&quot;span-toggle-text&quot;&gt;Enable Standalone Mode&lt;/span&gt;&lt;label for=&quot;general-param-standalone-mode-toggle&quot; class=&quot;checkbox-switch&quot;&gt;
            &lt;input type=&quot;checkbox&quot; onclick=&quot;updateCheckbox(this.id); updateConcatenatedGeneralParamsReturnVariable();&quot; id=&quot;general-param-standalone-mode-toggle&quot; value=&quot;&quot; checked=&quot;&quot;&gt;
            &lt;span id=&quot;general-param-standalone-mode-toggle-span&quot; class=&quot;&quot;&gt;&lt;/span&gt;
        &lt;/label&gt;&lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;${infoTextStandaloneMode}&quot;&gt;&lt;/span&gt;
        &lt;/div&gt;
        &lt;style scoped=&quot;scoped&quot; onload=&quot;updateCheckbox(&apos;general-param-standalone-mode-toggle&apos;);&quot;&gt;   &lt;/style&gt;
    &lt;/div&gt;

    &lt;div class=&quot;outerWrapper&quot; id=&quot;workloads-on-master-div&quot; style=&quot;display: none&quot;&gt;
        &lt;div class=&quot;wrapper&quot;&gt;
            &lt;span class=&quot;span-toggle-text&quot;&gt;Allow Workloads on Kubernetes Master&lt;/span&gt;&lt;label for=&quot;general-param-workloads-on-master-toggle&quot; class=&quot;checkbox-switch&quot;&gt;
            &lt;input type=&quot;checkbox&quot; onclick=&quot;updateCheckbox(this.id); updateConcatenatedGeneralParamsReturnVariable();&quot; id=&quot;general-param-workloads-on-master-toggle&quot; value=&quot;&quot; checked=&quot;&quot;&gt;
            &lt;span id=&quot;general-param-workloads-on-master-toggle-span&quot; class=&quot;&quot;&gt;&lt;/span&gt;
        &lt;/label&gt;&lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;${infoTextWorkloadOnMaster}&quot;&gt;&lt;/span&gt;
        &lt;/div&gt;
        &lt;style scoped=&quot;scoped&quot; onload=&quot;updateCheckbox(&apos;general-param-workloads-on-master-toggle&apos;);&quot;&gt;   &lt;/style&gt;
    &lt;/div&gt;

    &lt;input type=&quot;hidden&quot; id=&quot;general-param-standalone-mode-toggle-name-value&quot; name=&quot;general-param-standalone-mode-toggle-name-value&quot; value=&quot;&quot;&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;general-param-workloads-on-master-toggle-name-value&quot; name=&quot;general-param-workloads-on-master-toggle-name-value&quot; value=&quot;&quot;&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;concatenated-general-params&quot; name=&quot;value&quot; value=&quot;&quot; &gt;
    &lt;style scoped=&quot;scoped&quot; onload=&quot;updateConcatenatedGeneralParamsReturnVariable();&quot;&gt;   &lt;/style&gt;
    &quot;&quot;&quot;
    return HTML
} catch (e) {
    println &quot;Something went wrong in the HTML return block (general_parameters.groovy): ${e}&quot;
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters>PROFILE</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>KX_MAIN_NODES_CONFIG</name>
          <randomName>choice-parameter-17383888424897</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>import groovy.json.JsonSlurper

def extendedDescription
def parsedJson

def STANDALONE_MODE

int mainNodeCountMinWarning = 0 // Set to 0 to disable the minimum warning
int mainNodeValueDisplayConversion = 1 // Set to 1 for no conversion (eg. from MB to GB)
def mainNodeCountRangeUnit = &quot;#&quot;
def mainNodeCountWarningText = &quot;&quot;
def mainNodeInfoText = &quot;Determines the number of KX-Main nodes that will be started&quot;
def mainNodeParamShortTitle = &quot;Number KX-Main Nodes&quot;

int mainNodeCountMin
int mainNodeCountMax
int mainNodeCountStep
int mainNodeCountStartValue
def main_node_count
def mainNodeCountOpacity
def mainNodeCountCursor

try {
    def jsonFilePath = PROFILE
    def inputFile = new File(jsonFilePath)
    parsedJson = new JsonSlurper().parse(inputFile)
} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (properties_main_node.groovy): ${e}&quot;)
}

try {
    if (GENERAL_PARAMETERS) {
        generalParameterElements = GENERAL_PARAMETERS.split(&apos;;&apos;)
        STANDALONE_MODE = generalParameterElements[4]
    }
} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (properties_main_node.groovy): ${e}&quot;)
}

try {
    if (STANDALONE_MODE != true) {

        main_node_count = parsedJson.config.vm_properties.main_node_count

        mainNodeCountMin = 1
        mainNodeCountMax = 16
        mainNodeCountStep = 1
        mainNodeCountStartValue = main_node_count.toInteger()
        println(&quot;properties_main_node.groovy -&gt; mainNodeCountStartValue: ${mainNodeCountStartValue} (Standalone Mode: FALSE)&quot;)

        mainNodeCountOpacity = &quot;0.7&quot;
        mainNodeCountCursor = &quot;pointer&quot;

    } else {

        mainNodeCountMin = 1
        mainNodeCountMax = 1
        mainNodeCountStep = 1
        mainNodeCountStartValue = 1
        println(&quot;properties_main_node.groovy -&gt; mainNodeCountStartValue: ${mainNodeCountStartValue} (Standalone Mode: TRUE)&quot;)
        mainNodeCountOpacity = &quot;0.1&quot;
        mainNodeCountCursor = &quot;not-allowed&quot;

    }

} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (properties_main_node.groovy): ${e}&quot;)
}

def main_admin_node_cpu_cores

try {
    main_admin_node_cpu_cores = parsedJson.config.vm_properties.main_admin_node_cpu_cores
    println(&quot;Profile: &quot; + PROFILE)
    println(&quot;CPU Cores read: &quot; + main_admin_node_cpu_cores)
} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (properties_main_node.groovy): ${e}&quot;)
}

int mainNodeCpuCoresMin = 1
int mainNodeCpuCoresMax = 16
int mainNodeCpuCoresStep = 1
int mainNodeCpuCoresStartValue = main_admin_node_cpu_cores.toInteger()
int mainNodeCpuCoresMinWarning = 2
int cpuCoresValueDisplayConversion = 1
def cpuCoresRangeUnit = &quot;Cores&quot;
def mainNodeCpuCoresWarningText = &quot;Warning. Allocating less than 2 cores of CPU to the admin main node may result in a poor experience&quot;
def mainNodeCpuCoresInfoText = &quot;Determines the amount of CPU cores that will be allocated to the KX-Main Admin VM&quot;
def mainNodeCpuCoresParamShortTitle = &quot;CPU Cores&quot;

try {
    extendedDescription = &quot;KX-Main nodes provide two core functions - Kubernetes master services as well as the desktop environment for easy access to deployed tools and documentation. Only the first KX-Main node hosts both the desktop environment, and the Kubernetes Master services. Subsequent KX-Main nodes host the Kubernetes Master services only.&quot;
} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (properties_main_node.groovy): ${e}&quot;)
}

def main_admin_node_memory

try {
    main_admin_node_memory = parsedJson.config.vm_properties.main_admin_node_memory
} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (properties_main_node.groovy): ${e}&quot;)
}

int mainNodeMemoryMin = 4096
int mainNodeMemoryMax = 32384
int mainNodeMemoryStep = 1024
int mainNodeMemoryStartValue = main_admin_node_memory.toInteger()
int mainNodeMemoryMinWarning = 8192
int memoryValueDisplayConversion = 1024 // Set to 1 for no conversion. Option for display MB as shorter GB form
def memoryRangeUnit = &quot;GB&quot;
def mainNodeMemoryWarningText = &quot;Warning. Allocating less than 8GB of ram to the admin main node may result in a poor experience&quot;
def mainNodeMemoryInfoText = &quot;Determines the amount of memory that will be allocated to the KX-Main Admin VM&quot;
def mainNodeMemoryParamShortTitle = &quot;Memory&quot;


try {
    // language=HTML
    def HTML = &quot;&quot;&quot;
    &lt;div id=&quot;headline-main-div&quot; style=&quot;display: none;&quot;&gt;
    &lt;h1&gt;Environment Resource Configuration&lt;/h1&gt;
    &lt;p&gt;Here you can define how many physical resources you wish to allocate to the KX.AS.CODE virtual machines.&lt;/p&gt;
    &lt;h2&gt;KX-Main Parameters&lt;/h2&gt;
    &lt;span class=&quot;description-paragraph-span&quot;&gt;&lt;p&gt;${extendedDescription }&lt;/p&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&quot;outerWrapper&quot; id=&quot;main-node-count-div&quot; style=&quot;display: none;&quot;&gt;
        &lt;div class=&quot;wrapper&quot;&gt;&lt;span&gt;&lt;img src=&quot;/userContent/icons/pound.svg&quot; class=&quot;param-icon svg-purple&quot; alt=&quot;#&quot; /&gt;&lt;/span&gt;
            &lt;span id=&quot;counter_value_main_node_count_value&quot; class=&quot;counter-element-value&quot;&gt;${mainNodeCountStartValue} ${mainNodeCountRangeUnit}&lt;/span&gt;
            &lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-left&quot; style=&quot;opacity: ${mainNodeCountOpacity}; cursor: ${mainNodeCountCursor}&quot;
                                                    onclick=&quot;subtract_one(&amp;quot;counter_value_main_node_count_previous_value&amp;quot;, &amp;quot;counter_value_main_node_count&amp;quot;, &amp;quot;counter_value_main_node_count_value&amp;quot;, &amp;quot;counter_value_main_node_count_warning_icon&amp;quot;, &amp;quot;${mainNodeCountMinWarning}&amp;quot;, &amp;quot;${mainNodeValueDisplayConversion}&amp;quot;, &amp;quot;${mainNodeCountRangeUnit}&amp;quot;, &amp;quot;${mainNodeCountStep}&amp;quot;, &amp;quot;${mainNodeCountMin}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/chevron-down.svg&quot; alt=&quot;minus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt;
            &lt;span class=&quot;divider-span&quot;&gt;&lt;/span&gt;
            &lt;span class=&quot;button-range-span&quot;&gt;
                    &lt;span class=&quot;divider-span&quot;&gt;&lt;/span&gt;
                    &lt;button type=&quot;button&quot; class=&quot;button-right&quot; style=&quot;opacity: ${mainNodeCountOpacity}; cursor: ${mainNodeCountCursor}&quot;
                            onclick=&quot;add_one(&amp;quot;counter_value_main_node_count_previous_value&amp;quot;, &amp;quot;counter_value_main_node_count&amp;quot;, &amp;quot;counter_value_main_node_count_value&amp;quot;, &amp;quot;counter_value_main_node_count_warning_icon&amp;quot;, &amp;quot;${mainNodeCountMinWarning}&amp;quot;, &amp;quot;${mainNodeValueDisplayConversion}&amp;quot;, &amp;quot;${mainNodeCountRangeUnit}&amp;quot;, &amp;quot;${mainNodeCountStep}&amp;quot;, &amp;quot;${mainNodeCountMax}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/chevron-up.svg&quot; alt=&quot;plus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt;
            &lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot;&gt;&lt;/span&gt;
            &lt;span id=&quot;counter_value_main_node_count_warning_icon&quot; data-text=&quot;${mainNodeCountWarningText}&quot; class=&quot;warning-span tooltip&quot;&gt;&lt;img src=&quot;/userContent/icons/triangle-exclamation-solid.svg&quot; class=&quot;warn-image svg-orange-red&quot; alt=&quot;#&quot; /&gt;&lt;/span&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;style scoped=&quot;scoped&quot; onload=&quot;show_value(&amp;quot;${mainNodeCountStartValue}&amp;quot;, &amp;quot;counter_value_main_node_count_previous_value&amp;quot;, &amp;quot;counter_value_main_node_count&amp;quot;, &amp;quot;counter_value_main_node_count_value&amp;quot;, &amp;quot;counter_value_main_node_count_warning_icon&amp;quot;, &amp;quot;${mainNodeCountMinWarning}&amp;quot;, &amp;quot;${mainNodeValueDisplayConversion}&amp;quot;, &amp;quot;${mainNodeCountRangeUnit}&amp;quot;);&quot;&gt;   &lt;/style&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;counter_value_main_node_count&quot; name=&quot;counter_value_main_node_count&quot; value=&quot;${mainNodeCountStartValue}&quot;&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;counter_value_main_node_count_previous_value&quot; name=&quot;counter_value_main_node_count_previous_value&quot; value=&quot;&quot;&gt;


    &lt;div class=&quot;outerWrapper&quot; id=&quot;main-cpu-count-div&quot; style=&quot;display: none&quot;&gt;
        &lt;div class=&quot;wrapper&quot;&gt;&lt;span&gt;&lt;img src=&quot;/userContent/icons/memory.svg&quot; class=&quot;param-icon svg-purple&quot; alt=&quot;cpu&quot; /&gt;&lt;/span&gt;

            &lt;span id=&quot;slider_value_main_admin_node_cpu_cores_value&quot; class=&quot;slider-element-value&quot;&gt;${mainNodeCpuCoresStartValue} ${cpuCoresRangeUnit}&lt;/span&gt;
            &lt;div id=&quot;container&quot;&gt;&lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-left&quot;
            onclick=&quot;subtract_one(&amp;quot;slider_value_main_admin_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${mainNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;, &amp;quot;${mainNodeCpuCoresStep}&amp;quot;, &amp;quot;${mainNodeCpuCoresMin}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/minus.svg&quot; alt=&quot;minus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt; &lt;span class=&quot;input-range-span&quot;&gt;
            &lt;input type=&quot;range&quot; min=&quot;${mainNodeCpuCoresMin}&quot;
                   max=&quot;${mainNodeCpuCoresMax}&quot;
                   step=&quot;${mainNodeCpuCoresStep}&quot;
                   value=&quot;${mainNodeCpuCoresStartValue}&quot;
                   name=&quot;slider_value_main_admin_node_cpu_cores&quot;
                   class=&quot;slider&quot;
                   id=&quot;slider_value_main_admin_node_cpu_cores&quot;  onchange=&quot;show_value(this.value, &amp;quot;slider_value_main_admin_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${mainNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;);&quot;
                   onmouseleave=&quot;show_value(this.value, &amp;quot;slider_value_main_admin_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${mainNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;);&quot; onmousemove=&quot;update_display_value(this.value, &amp;quot;slider_value_main_admin_node_cpu_cores_value&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;);&quot;&gt;
              &lt;/span&gt;
                &lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-right&quot;
                onclick=&quot;add_one(&amp;quot;slider_value_main_admin_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${mainNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;, &amp;quot;${mainNodeCpuCoresStep}&amp;quot;, &amp;quot;${mainNodeCpuCoresMax}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/plus.svg&quot; alt=&quot;plus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt;
                &lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;${mainNodeCpuCoresInfoText}&quot;&gt;&lt;/span&gt;&lt;span id=&quot;slider_value_main_admin_node_cpu_cores_warning_icon&quot; data-text=&quot;${mainNodeCpuCoresWarningText}&quot; class=&quot;warning-span tooltip&quot;&gt;&lt;img src=&quot;/userContent/icons/triangle-exclamation-solid.svg&quot; class=&quot;warn-image svg-orange-red&quot; alt=&quot;cpu&quot; /&gt;&lt;/span&gt;

            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;style scoped=&quot;scoped&quot; onload=&quot;show_value(&amp;quot;${mainNodeCpuCoresStartValue}&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_main_admin_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${mainNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;);&quot;&gt;   &lt;/style&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;slider_value_main_admin_node_cpu_cores_previous_value&quot; name=&quot;slider_value_main_admin_node_cpu_cores_previous_value&quot; value=&quot;&quot; &gt;
    
    
        &lt;div class=&quot;outerWrapper&quot; id=&quot;main-memory-div&quot; style=&quot;display: none&quot;&gt;
        &lt;div class=&quot;wrapper&quot;&gt;&lt;span&gt;&lt;img src=&quot;/userContent/icons/memory-solid.svg&quot; class=&quot;param-icon svg-purple&quot; alt=&quot;cpu&quot; /&gt;&lt;/span&gt;

            &lt;span id=&quot;slider_value_main_admin_node_memory_value&quot; class=&quot;slider-element-value&quot;&gt;${mainNodeMemoryStartValue} ${memoryRangeUnit}&lt;/span&gt;
            &lt;div id=&quot;container&quot;&gt;&lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-left&quot;
            onclick=&quot;subtract_one(&amp;quot;slider_value_main_admin_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_warning_icon&amp;quot;, &amp;quot;${mainNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;, &amp;quot;${mainNodeMemoryStep}&amp;quot;, &amp;quot;${mainNodeMemoryMin}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/minus.svg&quot; alt=&quot;minus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt; &lt;span class=&quot;input-range-span&quot;&gt;
            &lt;input type=&quot;range&quot; min=&quot;${mainNodeMemoryMin}&quot;
                   max=&quot;${mainNodeMemoryMax}&quot;
                   step=&quot;${mainNodeMemoryStep}&quot;
                   value=&quot;${mainNodeMemoryStartValue}&quot;
                   name=&quot;slider_value_main_admin_node_memory&quot;
                   class=&quot;slider&quot;
                   id=&quot;slider_value_main_admin_node_memory&quot; onchange=&quot;show_value(this.value, &amp;quot;slider_value_main_admin_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_warning_icon&amp;quot;, &amp;quot;${mainNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;);&quot;
                   onmouseleave=&quot;show_value(this.value, &amp;quot;slider_value_main_admin_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_warning_icon&amp;quot;, &amp;quot;${mainNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;);&quot; onmousemove=&quot;update_display_value(this.value, &amp;quot;slider_value_main_admin_node_memory_value&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;);&quot;&gt;
              &lt;/span&gt;
                &lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-right&quot;
                onclick=&quot;add_one(&amp;quot;slider_value_main_admin_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_warning_icon&amp;quot;, &amp;quot;${mainNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;, &amp;quot;${mainNodeMemoryStep}&amp;quot;, &amp;quot;${mainNodeMemoryMax}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/plus.svg&quot; alt=&quot;plus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt;
                &lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;${mainNodeMemoryInfoText}&quot;&gt;&lt;/span&gt;&lt;span id=&quot;slider_value_main_admin_node_memory_warning_icon&quot; data-text=&quot;${mainNodeMemoryWarningText}&quot; class=&quot;warning-span tooltip&quot;&gt;&lt;img src=&quot;/userContent/icons/triangle-exclamation-solid.svg&quot; class=&quot;warn-image svg-orange-red&quot; alt=&quot;cpu&quot; /&gt;&lt;/span&gt;

            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;style scoped=&quot;scoped&quot; onload=&quot;show_value(&amp;quot;${mainNodeMemoryStartValue}&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_value&amp;quot;, &amp;quot;slider_value_main_admin_node_memory_warning_icon&amp;quot;, &amp;quot;${mainNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;);&quot;&gt;   &lt;/style&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;slider_value_main_admin_node_memory_previous_value&quot; name=&quot;slider_value_main_admin_node_memory_previous_value&quot; value=&quot;&quot; &gt;
    &lt;input type=&quot;hidden&quot; id=&quot;concatenated_value_main_node_config&quot; name=&quot;value&quot; value=&quot;&quot; &gt;
    
    &quot;&quot;&quot;
    return HTML
} catch (e) {
    println(&quot;Something went wrong in the HTML return block (properties_main_node.groovy): ${e}&quot;)
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters>PROFILE, GENERAL_PARAMETERS</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>KX_WORKER_NODES_CONFIG</name>
          <randomName>choice-parameter-191340721703028</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>import groovy.json.JsonSlurper

def extendedDescription
def parsedJson

def STANDALONE_MODE

int workerNodeCountMinWarning = 0 // Set to 0 to disable the minimum warning
int workerNodeValueDisplayConversion = 1 // Set to 1 for no conversion (eg. from MB to GB)
def workerNodeCountRangeUnit = &quot;#&quot;
def workerNodeCountWarningText = &quot;&quot;
def workerNodeInfoText = &quot;Determines the number of KX-Worker nodes that will be started&quot;
def workerNodeParamShortTitle = &quot;Number KX-Worker Nodes&quot;

int workerNodeCountMin
int workerNodeCountMax
int workerNodeCountStep
int workerNodeCountStartValue
def worker_node_count
def workerNodeCountOpacity
def workerNodeCountCursor

try {
    def jsonFilePath = PROFILE
    def inputFile = new File(jsonFilePath)
    parsedJson = new JsonSlurper().parse(inputFile)
} catch(e) {
    println &quot;Something went wrong in the GROOVY block (properties_worker_node.groovy): ${e}&quot;
}

try {
    if (GENERAL_PARAMETERS) {
        generalParameterElements = GENERAL_PARAMETERS.split(&apos;;&apos;)
        STANDALONE_MODE = generalParameterElements[4]
    }
} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (properties_worker_node.groovy): ${e}&quot;)
}

try {
    if (STANDALONE_MODE != true) {

        worker_node_count = parsedJson.config.vm_properties.worker_node_count

        workerNodeCountMin = 0
        workerNodeCountMax = 16
        workerNodeCountStep = 1
        workerNodeCountStartValue = worker_node_count.toInteger()
        println(&quot;properties_worker_node.groovy -&gt; workerNodeCountStartValue: ${workerNodeCountStartValue} (Standalone Mode: FALSE)&quot;)

        workerNodeCountOpacity = &quot;0.7&quot;
        workerNodeCountCursor = &quot;pointer&quot;

    } else {

        workerNodeCountMin = 0
        workerNodeCountMax = 0
        workerNodeCountStep = 1
        workerNodeCountStartValue = 1
        println(&quot;properties_worker_node.groovy -&gt; workerNodeCountStartValue: ${workerNodeCountStartValue} (Standalone Mode: TRUE)&quot;)
        workerNodeCountOpacity = &quot;0.1&quot;
        workerNodeCountCursor = &quot;not-allowed&quot;

    }

} catch(e) {
    println &quot;Something went wrong in the GROOVY block (properties_worker_node.groovy): ${e}&quot;
}

def worker_node_cpu_cores

try {
    worker_node_cpu_cores = parsedJson.config.vm_properties.worker_node_cpu_cores
    println(&quot;Profile: &quot; + PROFILE)
    println(&quot;CPU Cores read: &quot; + worker_node_cpu_cores)
} catch(e) {
    println &quot;Something went wrong in the GROOVY block (properties_worker_node.groovy): ${e}&quot;
}

int workerNodeCpuCoresMin = 1
int workerNodeCpuCoresMax = 16
int workerNodeCpuCoresStep = 1
int workerNodeCpuCoresStartValue = worker_node_cpu_cores.toInteger()
int workerNodeCpuCoresMinWarning = 2
int cpuCoresValueDisplayConversion = 1
def cpuCoresRangeUnit = &quot;Cores&quot;
def workerNodeCpuCoresWarningText = &quot;Warning. Allocating less than 2 cores of CPU to the worker may result in a poor experience&quot;
def workerNodeCpuCoresInfoText = &quot;Determines the amount of CPU cores that will be allocated to the KX-Worker VM&quot;
def workerNodeCpuCoresParamShortTitle = &quot;CPU Cores&quot;

try {
    extendedDescription = &quot;KX-Worker nodes are optional. On a local machine with lower amount of resources (equal to or below 16GB ram), a singe node standalone KX.AS.CODE deployment is advisable. In this case, just set the number of KX-Workers to 0. The &apos;allow workloads on master&apos; toggle must be set to on in this case, else it will not be possible to deploy any workloads beyond the core tools and services.&quot;
} catch(e) {
    println &quot;Something went wrong in the GROOVY block (properties_worker_node.groovy): ${e}&quot;
}

def worker_node_memory

try {
    worker_node_memory = parsedJson.config.vm_properties.worker_node_memory
} catch(e) {
    println &quot;Something went wrong in the GROOVY block (properties_worker_node.groovy): ${e}&quot;
}

int workerNodeMemoryMin = 4096
int workerNodeMemoryMax = 32384
int workerNodeMemoryStep = 1024
int workerNodeMemoryStartValue = worker_node_memory.toInteger()
int workerNodeMemoryMinWarning = 8192
int memoryValueDisplayConversion = 1024 // Set to 1 for no conversion. Option for display MB as shorter GB form
def memoryRangeUnit = &quot;GB&quot;
def workerNodeMemoryWarningText = &quot;Warning. Allocating less than 8GB of ram to the admin main node may result in a poor experience&quot;
def workerNodeMemoryInfoText = &quot;Determines the amount of memory that will be allocated to the KX-Main Admin VM&quot;
def workerNodeMemoryParamShortTitle = &quot;Memory&quot;


try {
    // language=HTML
    def HTML = &quot;&quot;&quot;
    &lt;div id=&quot;headline-workers-div&quot; style=&quot;display: none;&quot;&gt;
    &lt;h2&gt;KX-Worker Parameters&lt;/h2&gt;
    &lt;span class=&quot;description-paragraph-span&quot;&gt;&lt;p&gt;${extendedDescription }&lt;/p&gt;&lt;/span&gt;
    &lt;/div&gt;
    
    &lt;div class=&quot;outerWrapper&quot; id=&quot;worker-node-count-div&quot; style=&quot;display: none;&quot;&gt;
        &lt;div class=&quot;wrapper&quot;&gt;&lt;span&gt;&lt;img src=&quot;/userContent/icons/pound.svg&quot; class=&quot;param-icon svg-purple&quot; alt=&quot;#&quot; /&gt;&lt;/span&gt;
            &lt;span id=&quot;counter_value_worker_node_count_value&quot; class=&quot;counter-element-value&quot;&gt;${workerNodeCountStartValue} ${workerNodeCountRangeUnit}&lt;/span&gt;
            &lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-left&quot; style=&quot;opacity: ${workerNodeCountOpacity}; cursor: ${workerNodeCountCursor}&quot;
                                                    onclick=&quot;subtract_one(&amp;quot;counter_value_worker_node_count_previous_value&amp;quot;, &amp;quot;counter_value_worker_node_count&amp;quot;, &amp;quot;counter_value_worker_node_count_value&amp;quot;, &amp;quot;counter_value_worker_node_count_warning_icon&amp;quot;, &amp;quot;${workerNodeCountMinWarning}&amp;quot;, &amp;quot;${workerNodeValueDisplayConversion}&amp;quot;, &amp;quot;${workerNodeCountRangeUnit}&amp;quot;, &amp;quot;${workerNodeCountStep}&amp;quot;, &amp;quot;${workerNodeCountMin}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/chevron-down.svg&quot; alt=&quot;minus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt;
            &lt;span class=&quot;divider-span&quot;&gt;&lt;/span&gt;
            &lt;span class=&quot;button-range-span&quot;&gt;
                    &lt;span class=&quot;divider-span&quot;&gt;&lt;/span&gt;
                    &lt;button type=&quot;button&quot; class=&quot;button-right&quot; style=&quot;opacity: ${workerNodeCountOpacity}; cursor: ${workerNodeCountCursor}&quot;
                            onclick=&quot;add_one(&amp;quot;counter_value_worker_node_count_previous_value&amp;quot;, &amp;quot;counter_value_worker_node_count&amp;quot;, &amp;quot;counter_value_worker_node_count_value&amp;quot;, &amp;quot;counter_value_worker_node_count_warning_icon&amp;quot;, &amp;quot;${workerNodeCountMinWarning}&amp;quot;, &amp;quot;${workerNodeValueDisplayConversion}&amp;quot;, &amp;quot;${workerNodeCountRangeUnit}&amp;quot;, &amp;quot;${workerNodeCountStep}&amp;quot;, &amp;quot;${workerNodeCountMax}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/chevron-up.svg&quot; alt=&quot;plus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt;
            &lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot;&gt;&lt;/span&gt;
            &lt;span id=&quot;counter_value_worker_node_count_warning_icon&quot; data-text=&quot;${workerNodeCountWarningText}&quot; class=&quot;warning-span tooltip&quot;&gt;&lt;img src=&quot;/userContent/icons/triangle-exclamation-solid.svg&quot; class=&quot;warn-image svg-orange-red&quot; alt=&quot;#&quot; /&gt;&lt;/span&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;style scoped=&quot;scoped&quot; onload=&quot;show_value(&amp;quot;${workerNodeCountStartValue}&amp;quot;, &amp;quot;counter_value_worker_node_count_previous_value&amp;quot;, &amp;quot;counter_value_worker_node_count&amp;quot;, &amp;quot;counter_value_worker_node_count_value&amp;quot;, &amp;quot;counter_value_worker_node_count_warning_icon&amp;quot;, &amp;quot;${workerNodeCountMinWarning}&amp;quot;, &amp;quot;${workerNodeValueDisplayConversion}&amp;quot;, &amp;quot;${workerNodeCountRangeUnit}&amp;quot;);&quot;&gt;   &lt;/style&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;counter_value_worker_node_count&quot; name=&quot;counter_value_worker_node_count&quot; value=&quot;${workerNodeCountStartValue}&quot;&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;counter_value_worker_node_count_previous_value&quot; name=&quot;counter_value_worker_node_count_previous_value&quot; value=&quot;&quot;&gt;


    &lt;div class=&quot;outerWrapper&quot; id=&quot;worker-cpu-count-div&quot; style=&quot;display: none&quot;&gt;
        &lt;div class=&quot;wrapper&quot;&gt;&lt;span&gt;&lt;img src=&quot;/userContent/icons/memory.svg&quot; class=&quot;param-icon svg-purple&quot; alt=&quot;cpu&quot; /&gt;&lt;/span&gt;

            &lt;span id=&quot;slider_value_worker_node_cpu_cores_value&quot; class=&quot;slider-element-value&quot;&gt;${workerNodeCpuCoresStartValue} ${cpuCoresRangeUnit}&lt;/span&gt;
            &lt;div id=&quot;container&quot;&gt;&lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-left&quot;
            onclick=&quot;subtract_one(&amp;quot;slider_value_worker_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${workerNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;, &amp;quot;${workerNodeCpuCoresStep}&amp;quot;, &amp;quot;${workerNodeCpuCoresMin}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/minus.svg&quot; alt=&quot;minus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt; &lt;span class=&quot;input-range-span&quot;&gt;
            &lt;input type=&quot;range&quot; min=&quot;${workerNodeCpuCoresMin}&quot;
                   max=&quot;${workerNodeCpuCoresMax}&quot;
                   step=&quot;${workerNodeCpuCoresStep}&quot;
                   value=&quot;${workerNodeCpuCoresStartValue}&quot;
                   name=&quot;slider_value_worker_node_cpu_cores&quot;
                   class=&quot;slider&quot;
                   id=&quot;slider_value_worker_node_cpu_cores&quot;  onchange=&quot;show_value(this.value, &amp;quot;slider_value_worker_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${workerNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;);&quot;
                   onmouseleave=&quot;show_value(this.value, &amp;quot;slider_value_worker_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${workerNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;);&quot; onmousemove=&quot;update_display_value(this.value, &amp;quot;slider_value_worker_node_cpu_cores_value&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;);&quot;&gt;
              &lt;/span&gt;
                &lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-right&quot;
                onclick=&quot;add_one(&amp;quot;slider_value_worker_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${workerNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;, &amp;quot;${workerNodeCpuCoresStep}&amp;quot;, &amp;quot;${workerNodeCpuCoresMax}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/plus.svg&quot; alt=&quot;plus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt;
                &lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;${workerNodeCpuCoresInfoText}&quot;&gt;&lt;/span&gt;&lt;span id=&quot;slider_value_worker_node_cpu_cores_warning_icon&quot; data-text=&quot;${workerNodeCpuCoresWarningText}&quot; class=&quot;warning-span tooltip&quot;&gt;&lt;img src=&quot;/userContent/icons/triangle-exclamation-solid.svg&quot; class=&quot;warn-image svg-orange-red&quot; alt=&quot;cpu&quot; /&gt;&lt;/span&gt;

            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;style scoped=&quot;scoped&quot; onload=&quot;show_value(&amp;quot;${workerNodeCpuCoresStartValue}&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_value&amp;quot;, &amp;quot;slider_value_worker_node_cpu_cores_warning_icon&amp;quot;, &amp;quot;${workerNodeCpuCoresMinWarning}&amp;quot;, &amp;quot;${cpuCoresValueDisplayConversion}&amp;quot;, &amp;quot;${cpuCoresRangeUnit}&amp;quot;);&quot;&gt;   &lt;/style&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;slider_value_worker_node_cpu_cores_previous_value&quot; name=&quot;slider_value_worker_node_cpu_cores_previous_value&quot; value=&quot;&quot; &gt;
    
    
    &lt;div class=&quot;outerWrapper&quot; id=&quot;worker-memory-div&quot; style=&quot;display: none&quot;&gt;
        &lt;div class=&quot;wrapper&quot;&gt;&lt;span&gt;&lt;img src=&quot;/userContent/icons/memory-solid.svg&quot; class=&quot;param-icon svg-purple&quot; alt=&quot;cpu&quot; /&gt;&lt;/span&gt;

            &lt;span id=&quot;slider_value_worker_node_memory_value&quot; class=&quot;slider-element-value&quot;&gt;${workerNodeMemoryStartValue} ${memoryRangeUnit}&lt;/span&gt;
            &lt;div id=&quot;container&quot;&gt;&lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-left&quot;
            onclick=&quot;subtract_one(&amp;quot;slider_value_worker_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_memory&amp;quot;, &amp;quot;slider_value_worker_node_memory_value&amp;quot;, &amp;quot;slider_value_worker_node_memory_warning_icon&amp;quot;, &amp;quot;${workerNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;, &amp;quot;${workerNodeMemoryStep}&amp;quot;, &amp;quot;${workerNodeMemoryMin}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/minus.svg&quot; alt=&quot;minus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt; &lt;span class=&quot;input-range-span&quot;&gt;
            &lt;input type=&quot;range&quot; min=&quot;${workerNodeMemoryMin}&quot;
                   max=&quot;${workerNodeMemoryMax}&quot;
                   step=&quot;${workerNodeMemoryStep}&quot;
                   value=&quot;${workerNodeMemoryStartValue}&quot;
                   name=&quot;slider_value_worker_node_memory&quot;
                   class=&quot;slider&quot;
                   id=&quot;slider_value_worker_node_memory&quot;  onchange=&quot;show_value(this.value, &amp;quot;slider_value_worker_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_memory&amp;quot;, &amp;quot;slider_value_worker_node_memory_value&amp;quot;, &amp;quot;slider_value_worker_node_memory_warning_icon&amp;quot;, &amp;quot;${workerNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;);&quot;
                   onmouseleave=&quot;show_value(this.value, &amp;quot;slider_value_worker_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_memory&amp;quot;, &amp;quot;slider_value_worker_node_memory_value&amp;quot;, &amp;quot;slider_value_worker_node_memory_warning_icon&amp;quot;, &amp;quot;${workerNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;);&quot; onmousemove=&quot;update_display_value(this.value, &amp;quot;slider_value_worker_node_memory_value&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;);&quot;&gt;
              &lt;/span&gt;
                &lt;span class=&quot;button-range-span&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;button-right&quot;
                onclick=&quot;add_one(&amp;quot;slider_value_worker_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_memory&amp;quot;, &amp;quot;slider_value_worker_node_memory_value&amp;quot;, &amp;quot;slider_value_worker_node_memory_warning_icon&amp;quot;, &amp;quot;${workerNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;, &amp;quot;${workerNodeMemoryStep}&amp;quot;, &amp;quot;${workerNodeMemoryMax}&amp;quot;);&quot;&gt;&lt;img src=&quot;/userContent/icons/plus.svg&quot; alt=&quot;plus&quot; class=&quot;image-plus-minus svg-white&quot;/&gt;&lt;/button&gt;&lt;/span&gt;
                &lt;span class=&quot;info-span&quot;&gt;&lt;img src=&quot;/userContent/icons/information-variant.svg&quot; class=&quot;info-icon&quot; alt=&quot;${workerNodeMemoryInfoText}&quot;&gt;&lt;/span&gt;&lt;span id=&quot;slider_value_worker_node_memory_warning_icon&quot; data-text=&quot;${workerNodeMemoryWarningText}&quot; class=&quot;warning-span tooltip&quot;&gt;&lt;img src=&quot;/userContent/icons/triangle-exclamation-solid.svg&quot; class=&quot;warn-image svg-orange-red&quot; alt=&quot;cpu&quot; /&gt;&lt;/span&gt;

            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;style scoped=&quot;scoped&quot; onload=&quot;show_value(&amp;quot;${workerNodeMemoryStartValue}&amp;quot;, &amp;quot;slider_value_worker_node_memory_previous_value&amp;quot;, &amp;quot;slider_value_worker_node_memory&amp;quot;, &amp;quot;slider_value_worker_node_memory_value&amp;quot;, &amp;quot;slider_value_worker_node_memory_warning_icon&amp;quot;, &amp;quot;${workerNodeMemoryMinWarning}&amp;quot;, &amp;quot;${memoryValueDisplayConversion}&amp;quot;, &amp;quot;${memoryRangeUnit}&amp;quot;);&quot;&gt;   &lt;/style&gt;
    &lt;input type=&quot;hidden&quot; id=&quot;slider_value_worker_node_memory_previous_value&quot; name=&quot;slider_value_worker_node_memory_previous_value&quot; value=&quot;&quot; &gt;
    &lt;input type=&quot;hidden&quot; id=&quot;concatenated_value_worker_node_config&quot; name=&quot;value&quot; value=&quot;&quot; &gt;
    
    &quot;&quot;&quot;
    return HTML
} catch (e) {
    println &quot;Something went wrong in the HTML return block (properties_worker_node.groovy): ${e}&quot;
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters>PROFILE, GENERAL_PARAMETERS</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>STORAGE_PARAMETERS</name>
          <randomName>choice-parameter-249885383324784</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>@{storage_parameters.groovy}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters>PROFILE</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>TEMPLATE_SELECTOR</name>
          <randomName>choice-parameter-289437698944100</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>@{select_templates.groovy}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>USER_PROVISIONING</name>
          <description></description>
          <randomName>choice-parameter-12643302043893</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>@{user_provioning.groovy}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>true</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>REVIEW_AND_LAUNCH</name>
          <randomName>choice-parameter-289423783368416</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>import java.lang.management.*
import groovy.json.JsonSlurper

def extendedDescription

try {
    extendedDescription = &quot;The charts below show how the selections you made fit with the physical resources available. If any of the charts are red, you should look to make corrections. For the storage parameters, as the volumes are thinly provisioned, an overallocation is not a problem, as long as you don&apos;t intend to use the full space.&quot;
} catch(e) {
    println &quot;Something went wrong in the GROOVY block (config_review_and_launch.groovy): ${e}&quot;
}

long freePhysicalMemorySize
long totalPhysicalMemorySize
int totalSystemCores
def currentSystemDisk
long totalSystemDisk
long freeSystemDisk
long usableSystemDisk

int kxMainMemory
int kxMainNumber
int kxMainCpuCores
int kxWorkerMemory
int kxWorkerNumber
int kxWorkerCpuCores

def normalPieColour = &quot;#9f4dd3&quot;
def warningPieColour = &quot;#FF6200&quot;
def alertPieColour = &quot;#f44336&quot;

def cpuPieColor
def memoryPieColor
def diskPieColor

int overallStorageRequired
int overallStorageNeededPercentage
int overallRemainingPercentage
int overallTotalNeededMemory
int overallTotalNeededCpuCores
int overallUsedCpuCoresPercentage
int overallUsedMemoryPercentage
int overallRemainingCpuCoresPercentage
int overallRemainingMemoryPercentage

def parsedJson
def jsonFilePath = PROFILE
def inputFile = new File(jsonFilePath)

def ALLOW_WORKLOADS_ON_KUBERNETES_MASTER

def kxMainRunningVms
def kxWorkerRunningVms

try {

    parsedJson = new JsonSlurper().parse(inputFile)

    mb = 1024 * 1024;
    gb = mb * 1024;

    def os = ManagementFactory.operatingSystemMXBean;
    freePhysicalMemorySize = os.getFreePhysicalMemorySize() / mb;
    totalPhysicalMemorySize = os.getTotalPhysicalMemorySize() / mb;

    totalSystemCores = Runtime.getRuntime().availableProcessors();

    File f = new File(&quot;/&quot;);
    currentSystemDisk = f.getAbsolutePath();
    totalSystemDisk = f.getTotalSpace() / gb;
    freeSystemDisk = f.getFreeSpace() / gb;
    usableSystemDisk = f.getUsableSpace() / gb;

    int number1GbVolumes
    int number5GbVolumes
    int number10GbVolumes
    int number30GbVolumes
    int number50GbVolumes
    int networkStorageVolume

    if ( STORAGE_PARAMETERS ) {
        def storageParameterElements = STORAGE_PARAMETERS.split(&apos;;&apos;)
        println(&quot;storageParameterElements: ${storageParameterElements} (config_review_and_launch.groovy)&quot;)
        number1GbVolumes = storageParameterElements[0].toInteger()
        number5GbVolumes = storageParameterElements[1].toInteger()
        number10GbVolumes = storageParameterElements[2].toInteger()
        number30GbVolumes = storageParameterElements[3].toInteger()
        number50GbVolumes = storageParameterElements[4].toInteger()
        networkStorageVolume = storageParameterElements[5].toInteger()
    } else {
        number1GbVolumes = parsedJson.config.local_volumes.one_gb.toInteger()
        number5GbVolumes = parsedJson.config.local_volumes.five_gb.toInteger()
        number10GbVolumes = parsedJson.config.local_volumes.ten_gb.toInteger()
        number30GbVolumes = parsedJson.config.local_volumes.thirty_gb.toInteger()
        number50GbVolumes = parsedJson.config.local_volumes.fifty_gb.toInteger()
        networkStorageVolume = parsedJson.config.glusterFsDiskSize.toInteger()
    }

    println(&quot;number1GbVolumes ${number1GbVolumes}&quot;)
    println(&quot;number5GbVolumes ${number5GbVolumes}&quot;)
    println(&quot;number10GbVolumes ${number10GbVolumes}&quot;)
    println(&quot;number30GbVolumes ${number30GbVolumes}&quot;)
    println(&quot;number50GbVolumes ${number50GbVolumes}&quot;)
    println(&quot;networkStorageVolume ${networkStorageVolume}&quot;)

    int totalLocalDiskSpace = totalSystemDisk.toInteger()
    int remainingDiskSpace = freeSystemDisk.toInteger()
    int totalLocalVolumesStorageRequired

    println(&quot;DEBUG --&gt; 1 (config_review_and_launch.groovy)&quot;)

    if ( GENERAL_PARAMETERS ) {
        generalParameterElements = GENERAL_PARAMETERS.split(&apos;;&apos;)
        BASE_DOMAIN = generalParameterElements[0]
        ENVIRONMENT_PREFIX = generalParameterElements[1]
        BASE_USER = generalParameterElements[2]
        BASE_PASSWORD = generalParameterElements[3]
        STANDALONE_MODE = generalParameterElements[4]
        ALLOW_WORKLOADS_ON_KUBERNETES_MASTER = generalParameterElements[5]
    } else {
        BASE_DOMAIN = parsedJson.config.baseDomain
        ENVIRONMENT_PREFIX = parsedJson.config.environmentPrefix
        BASE_USER = parsedJson.config.baseUser
        BASE_PASSWORD = parsedJson.config.basePassword
        STANDALONE_MODE = parsedJson.config.standaloneMode
        ALLOW_WORKLOADS_ON_KUBERNETES_MASTER = parsedJson.config.allowWorkloadsOnMaster
    }

    println(&quot;KX_MAIN_NODES_CONFIG: ${KX_MAIN_NODES_CONFIG} (config_review_and_launch.groovy)&quot;)
    if ( KX_MAIN_NODES_CONFIG ) {
        kxMainNodesConfigArray = KX_MAIN_NODES_CONFIG.split(&apos;;&apos;)
        NUMBER_OF_KX_MAIN_NODES = kxMainNodesConfigArray[0]
        KX_MAIN_ADMIN_CPU_CORES = kxMainNodesConfigArray[1]
        KX_MAIN_ADMIN_MEMORY = kxMainNodesConfigArray[2]
    }

    println(&quot;KX_WORKER_NODES_CONFIG: ${KX_WORKER_NODES_CONFIG} (config_review_and_launch.groovy)&quot;)
    if ( KX_WORKER_NODES_CONFIG ) {
        kxWorkerNodesConfigArray = KX_WORKER_NODES_CONFIG.split(&apos;;&apos;)
        NUMBER_OF_KX_WORKER_NODES = kxWorkerNodesConfigArray[0]
        KX_WORKER_NODES_CPU_CORES = kxWorkerNodesConfigArray[1]
        KX_WORKER_NODES_MEMORY = kxWorkerNodesConfigArray[2]
    }

    if ( NUMBER_OF_KX_MAIN_NODES ) {
        kxMainNumber = NUMBER_OF_KX_MAIN_NODES.toInteger()
    } else {
        kxMainNumber = parsedJson.config.vm_properties.main_node_count
    }

    if ( NUMBER_OF_KX_WORKER_NODES ) {
        kxWorkerNumber = NUMBER_OF_KX_WORKER_NODES.toInteger()
    } else {
        kxWorkerNumber = parsedJson.config.vm_properties.worker_node_count
    }

    if (ALLOW_WORKLOADS_ON_KUBERNETES_MASTER == &quot;true&quot;) {
        println(&quot;DEBUG --&gt; 1.4.1 (config_review_and_launch.groovy)&quot;)
        totalLocalVolumesStorageRequired = (number1GbVolumes + (number5GbVolumes * 5) + (number10GbVolumes * 10) + (number30GbVolumes * 30) + (number50GbVolumes * 50)) * (kxMainNumber + kxWorkerNumber)
        println(&quot;(${number1GbVolumes} + (${number5GbVolumes} * 5) + (${number10GbVolumes} * 10) + (${number30GbVolumes} * 30) + (${number50GbVolumes} * 50)) * (${kxMainNumber} + ${kxWorkerNumber})&quot;)
        println(&quot;Total local storage required: ${totalLocalVolumesStorageRequired}&quot;)
    } else {
        println(&quot;DEBUG --&gt; 1.4.2 (config_review_and_launch.groovy)&quot;)
        totalLocalVolumesStorageRequired = (number1GbVolumes + (number5GbVolumes * 5) + (number10GbVolumes * 10) + (number30GbVolumes * 30) + (number50GbVolumes * 50)) * kxWorkerNumber
        println(&quot;Total local storage required: ${totalLocalVolumesStorageRequired}&quot;)
    }
    println(&quot;DEBUG --&gt; 1.5 (config_review_and_launch.groovy)&quot;)

    def baseSystemHddSize = 40
    def totalBaseSystemHddSize = baseSystemHddSize * (kxMainNumber + kxWorkerNumber)
    println(&quot;def totalBaseSystemHddSize = ${baseSystemHddSize} * (${kxMainNumber} + ${kxWorkerNumber})&quot;)
    println(&quot;totalBaseSystemHddSize: ${totalBaseSystemHddSize}&quot;)
    overallStorageRequired = totalBaseSystemHddSize + totalLocalVolumesStorageRequired + networkStorageVolume
    println(&quot;overallStorageRequired = ${totalBaseSystemHddSize} + ${totalLocalVolumesStorageRequired} + ${networkStorageVolume}&quot;)
    println(&quot;overallStorageRequired: ${overallStorageRequired}&quot;)

    overallStorageNeededPercentage = (overallStorageRequired / remainingDiskSpace) * 100
    overallRemainingPercentage = 100 - overallStorageNeededPercentage

    int slaveTotalMemory = totalPhysicalMemorySize.toInteger()
    int slaveFreeMemory = freePhysicalMemorySize.toInteger()
    println(&quot;DEBUG --&gt; 2 (config_review_and_launch.groovy)&quot;)
    int usedMemory = slaveTotalMemory - slaveFreeMemory
    //int usedMemoryPercentage = (usedMemory / slaveTotalMemory) * 100
    //int freeMemoryPercentage = (slaveFreeMemory / slaveTotalMemory) * 100

    if ( KX_MAIN_ADMIN_MEMORY ) {
        kxMainMemory = KX_MAIN_ADMIN_MEMORY.toInteger()
    } else {
        kxMainMemory = parsedJson.config.vm_properties.main_admin_node_memory
    }

    if ( KX_MAIN_ADMIN_CPU_CORES ) {
        kxMainCpuCores = KX_MAIN_ADMIN_CPU_CORES.toInteger()
    } else {
        kxMainCpuCores = parsedJson.config.vm_properties.main_admin_node_cpu_cores
    }

    int totalNeededMainNodeMemory = kxMainMemory * kxMainNumber
    int totalNeededMainNodeCpuCores = kxMainCpuCores * kxMainNumber

    if ( KX_WORKER_NODES_MEMORY ) {
        kxWorkerMemory = KX_WORKER_NODES_MEMORY.toInteger()
    } else {
        kxWorkerMemory = parsedJson.config.vm_properties.worker_node_memory
    }

    if ( KX_WORKER_NODES_CPU_CORES ) {
        kxWorkerCpuCores = KX_WORKER_NODES_CPU_CORES.toInteger()
    } else {
        kxWorkerCpuCores = parsedJson.config.vm_properties.worker_node_cpu_cores
    }

    NUMBER_OF_KX_WORKER_NODES = NUMBER_OF_KX_WORKER_NODES ?: &quot;0&quot;
    KX_WORKER_NODES_MEMORY = KX_WORKER_NODES_MEMORY ?: &quot;0&quot;
    KX_WORKER_NODES_CPU_CORES = KX_WORKER_NODES_CPU_CORES ?: &quot;0&quot;

    println(&quot;NUMBER_OF_KX_MAIN_NODES (config_review_and_launch.groovy): ${NUMBER_OF_KX_MAIN_NODES}&quot;)
    println(&quot;NUMBER_OF_KX_WORKER_NODES (config_review_and_launch.groovy): ${NUMBER_OF_KX_WORKER_NODES}&quot;)
    println(&quot;KX_WORKER_NODES_MEMORY (config_review_and_launch.groovy): ${KX_WORKER_NODES_MEMORY}&quot;)
    println(&quot;KX_WORKER_NODES_CPU_CORES (config_review_and_launch.groovy): ${KX_WORKER_NODES_CPU_CORES}&quot;)

    int totalNeededWorkerNodeMemory = kxWorkerMemory * kxWorkerNumber
    int totalNeededWorkerNodeCpuCores = kxWorkerCpuCores * kxWorkerNumber

    println(&quot;DEBUG --&gt; 3 (config_review_and_launch.groovy)&quot;)

    overallTotalNeededMemory = totalNeededMainNodeMemory + totalNeededWorkerNodeMemory
    overallTotalNeededCpuCores = totalNeededMainNodeCpuCores + totalNeededWorkerNodeCpuCores

    overallUsedCpuCoresPercentage = (overallTotalNeededCpuCores / totalSystemCores.toInteger()) * 100
    overallUsedMemoryPercentage = (overallTotalNeededMemory / slaveTotalMemory) * 100

    overallRemainingCpuCoresPercentage = 100 - overallUsedCpuCoresPercentage
    overallRemainingMemoryPercentage = 100 - overallUsedMemoryPercentage

    if (overallUsedCpuCoresPercentage &gt;= 90 &amp;&amp; overallUsedCpuCoresPercentage &lt; 100) {
        cpuPieColor = warningPieColour
    } else if (overallUsedCpuCoresPercentage &gt;= 100) {
        cpuPieColor = alertPieColour
    } else {
        cpuPieColor = normalPieColour
    }

    if (overallUsedMemoryPercentage &gt;= 90 &amp;&amp; overallUsedMemoryPercentage &lt; 100) {
        memoryPieColor = warningPieColour
    } else if (overallUsedMemoryPercentage &gt;= 100) {
        memoryPieColor = alertPieColour
    } else {
        memoryPieColor = normalPieColour
    }

    if (overallStorageNeededPercentage &gt;= 90 &amp;&amp; overallStorageNeededPercentage &lt; 100) {
        diskPieColor = warningPieColour
    } else if (overallStorageNeededPercentage &gt;= 100) {
        diskPieColor = alertPieColour
    } else {
        diskPieColor = normalPieColour
    }

    println(&quot;DEBUG --&gt; 4 (config_review_and_launch.groovy)&quot;)

    // Check running VMs
    def runningVirtualMachines
    def runningVirtualMachinesList = []

    if ( PROFILE.contains(&quot;vmware-desktop&quot;)) {

        runningVirtualMachines = &apos;vmrun list&apos;.execute().text
        runningVirtualMachinesList = new String(vagrantPluginList).split(&apos;####n&apos;)

    } else if ( PROFILE.contains(&quot;parallels&quot;) ) {
        runningVirtualMachines = &apos;prlctl list&apos;.execute().text
        println(runningVirtualMachines)
        virtualMachinesList = new String(runningVirtualMachines).split(&apos;####n&apos;)
        runningVirtualMachinesList = virtualMachinesList.findAll { it.contains(&apos;running&apos;) }
        kxMainRunningVms = runningVirtualMachinesList.findAll { it.contains(&apos;kx.as.code-demo1-main&apos;) }
        kxWorkerRunningVms = runningVirtualMachinesList.findAll { it.contains(&apos;kx.as.code-demo1-worker&apos;) }
        println(&quot;kxMainRunningVms.size(): &quot;, kxMainRunningVms.size())
        println(&quot;kxWorkerRunningVms.size()&quot;, kxWorkerRunningVms.size())
    } else if ( PROFILE.contains(&quot;virtualbox&quot;)) {

        runningVirtualMachines = &apos;vboxmanage list vms&apos;.execute().text
        runningVirtualMachinesList = new String(vagrantPluginList).split(&apos;####n&apos;)
    }

} catch(e) {
    println &quot;Something went wrong in the GROOVY block (config_review_and_launch.groovy): ${e}&quot;
}

try {
    // language=HTML
    def HTML = &quot;&quot;&quot;

        &lt;style&gt;

            .table {
                display:table;
            }

            .header {
                display:table-header-group;
                font-weight:bold;
            }

            .rowGroup {
                display:table-row-group;
            }

            .row {
                margin: 5px;
            }

            .cell {
                display:table-cell;
            }

            .cell-label {
                vertical-align: top;
                font-weight: bold;
                border-bottom-left-radius: 5px;
                border-top-left-radius: 5px;
                width: 270px;
                height: 15px;
                padding-left: 15px;
                padding-top: 2px;
                padding-bottom: 2px;
            }

            .cell-value {
                background-color: white;
                width: 150px;
                height: 15px;
                padding-right: 15px;
                padding-top: 2px;
                padding-bottom: 2px;
                text-align: right;
                vertical-align: top;
                border-spacing: 15px;
            }

            .cell-templates-value {
                background-color: white;
                width: 600px;
                height: 15px;
                padding-right: 15px;
                padding-top: 2px;
                padding-bottom: 2px;
                text-align: left;
                vertical-align: middle;
                border-spacing: 15px;
            }

            .flex-wrapper {
                flex-flow: row wrap;
                justify-content: space-between;
                flex-wrap: wrap;
            }

            .flex-item {
                display: block;
            }

            .launch-action-text-label {
                width: 100px;
                font-weight: bold;
                border: none;
                color: #404c50;
                padding: 2px 2px;
                text-decoration: none;
                margin: 2px 2px;
                display: inline-block;
                vertical-align: middle;
            }

        &lt;/style&gt;

    &lt;body&gt;
      &lt;div id=&quot;review-and-launch-div&quot; class=&quot;flex-wrapper&quot; style=&quot;display: none;&quot;&gt;
        &lt;h1&gt;Review &amp; Launch&lt;/h1&gt;

        &lt;span class=&quot;description-paragraph-span&quot;&gt;&lt;p&gt;${extendedDescription}&lt;/p&gt;&lt;/span&gt;

            &lt;div class=&quot;wrapper&quot; style=&quot;width: 100°°°°;&quot;&gt;
                &lt;div class=&quot;svg-item&quot;&gt;
                    &lt;svg width=&quot;250px&quot; height=&quot;250px&quot; viewBox=&quot;0 0 40 40&quot; class=&quot;donut&quot;&gt;
                        CPU
                        &lt;circle class=&quot;donut-hole&quot; cx=&quot;20&quot; cy=&quot;20&quot; r=&quot;15.91549430918954&quot; fill=&quot;#fff&quot;&gt;&lt;/circle&gt;
                        &lt;circle class=&quot;donut-ring&quot; cx=&quot;20&quot; cy=&quot;20&quot; r=&quot;15.91549430918954&quot; fill=&quot;transparent&quot; stroke-width=&quot;3.5&quot;&gt;&lt;/circle&gt;
                        &lt;circle style=&quot;stroke: ${cpuPieColor};&quot; class=&quot;donut-segment donut-segment-cpu&quot; cx=&quot;20&quot; cy=&quot;20&quot; r=&quot;15.91549430918954&quot; fill=&quot;transparent&quot; stroke-width=&quot;3.5&quot; stroke-dasharray=&quot;${overallUsedCpuCoresPercentage} ${overallRemainingCpuCoresPercentage}&quot; stroke-dashoffset=&quot;25&quot;&gt;&lt;/circle&gt;
                        &lt;g class=&quot;donut-text donut-text-cpu&quot;&gt;

                            &lt;text y=&quot;50°°°°&quot; transform=&quot;translate(0, 2)&quot;&gt;
                                &lt;tspan x=&quot;50°°°°&quot; text-anchor=&quot;middle&quot; class=&quot;donut-percent&quot; style=&quot;fill: ${cpuPieColor};&quot;&gt;${overallUsedCpuCoresPercentage}°°°°&lt;/tspan&gt;
                            &lt;/text&gt;
                            &lt;text y=&quot;60°°°°&quot; transform=&quot;translate(0, 2)&quot;&gt;
                                &lt;tspan x=&quot;50°°°°&quot; text-anchor=&quot;middle&quot; class=&quot;donut-data&quot;&gt;${overallTotalNeededCpuCores} CPU Cores&lt;/tspan&gt;
                            &lt;/text&gt;
                        &lt;/g&gt;
                    &lt;/svg&gt;
                &lt;/div&gt;

                &lt;div class=&quot;svg-item&quot;&gt;
                    &lt;svg width=&quot;250px&quot; height=&quot;250px&quot; viewBox=&quot;0 0 40 40&quot; class=&quot;donut&quot;&gt;
                        Memory
                        &lt;circle class=&quot;donut-hole&quot; cx=&quot;20&quot; cy=&quot;20&quot; r=&quot;15.91549430918954&quot; fill=&quot;#fff&quot;&gt;&lt;/circle&gt;
                        &lt;circle class=&quot;donut-ring&quot; cx=&quot;20&quot; cy=&quot;20&quot; r=&quot;15.91549430918954&quot; fill=&quot;transparent&quot; stroke-width=&quot;3.5&quot;&gt;&lt;/circle&gt;
                        &lt;circle style=&quot;stroke: ${memoryPieColor};&quot; class=&quot;donut-segment donut-segment-memory&quot; cx=&quot;20&quot; cy=&quot;20&quot; r=&quot;15.91549430918954&quot; fill=&quot;transparent&quot; stroke-width=&quot;3.5&quot; stroke-dasharray=&quot;${overallUsedMemoryPercentage} ${overallRemainingMemoryPercentage}&quot; stroke-dashoffset=&quot;25&quot;&gt;&lt;/circle&gt;
                        &lt;g class=&quot;donut-text donut-text-memory&quot;&gt;

                            &lt;text y=&quot;50°°°°&quot; transform=&quot;translate(0, 2)&quot;&gt;
                                &lt;tspan x=&quot;50°°°°&quot; text-anchor=&quot;middle&quot; class=&quot;donut-percent&quot; style=&quot;fill: ${memoryPieColor};&quot;&gt;${overallUsedMemoryPercentage}°°°°&lt;/tspan&gt;
                            &lt;/text&gt;
                            &lt;text y=&quot;60°°°°&quot; transform=&quot;translate(0, 2)&quot;&gt;
                                &lt;tspan x=&quot;50°°°°&quot; text-anchor=&quot;middle&quot; class=&quot;donut-data&quot;&gt;${overallTotalNeededMemory / 1024} GB Memory&lt;/tspan&gt;
                            &lt;/text&gt;
                        &lt;/g&gt;++
                    &lt;/svg&gt;
                &lt;/div&gt;

                &lt;div class=&quot;svg-item&quot;&gt;
                    &lt;svg width=&quot;250px&quot; height=&quot;250px&quot; viewBox=&quot;0 0 40 40&quot; class=&quot;donut&quot;&gt;
                        Disk Space
                        &lt;circle class=&quot;donut-hole&quot; cx=&quot;20&quot; cy=&quot;20&quot; r=&quot;15.91549430918954&quot; fill=&quot;#fff&quot;&gt;&lt;/circle&gt;
                        &lt;circle class=&quot;donut-ring&quot; cx=&quot;20&quot; cy=&quot;20&quot; r=&quot;15.91549430918954&quot; fill=&quot;transparent&quot; stroke-width=&quot;3.5&quot;&gt;&lt;/circle&gt;
                        &lt;circle style=&quot;stroke: ${diskPieColor};&quot; class=&quot;donut-segment donut-segment-disk&quot; cx=&quot;20&quot; cy=&quot;20&quot; r=&quot;15.91549430918954&quot; fill=&quot;transparent&quot; stroke-width=&quot;3.5&quot; stroke-dasharray=&quot;${overallStorageNeededPercentage} ${overallRemainingPercentage}&quot; stroke-dashoffset=&quot;25&quot;&gt;&lt;/circle&gt;
                        &lt;g class=&quot;donut-text donut-text-disk&quot;&gt;

                            &lt;text y=&quot;50°°°°&quot; transform=&quot;translate(0, 2)&quot;&gt;
                                &lt;tspan x=&quot;50°°°°&quot; text-anchor=&quot;middle&quot; class=&quot;donut-percent&quot; style=&quot;fill: ${diskPieColor};&quot;&gt;${overallStorageNeededPercentage}°°°°&lt;/tspan&gt;
                            &lt;/text&gt;
                            &lt;text y=&quot;60°°°°&quot; transform=&quot;translate(0, 2)&quot;&gt;
                                &lt;tspan x=&quot;50°°°°&quot; text-anchor=&quot;middle&quot; class=&quot;donut-data&quot;&gt;${overallStorageRequired} GB Disk Space&lt;/tspan&gt;
                            &lt;/text&gt;
                        &lt;/g&gt;
                    &lt;/svg&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;div style=&quot;width: 100°°°°; display: flex; justify-content: space-evenly;&quot;&gt;
            &lt;div class=&quot;flex-item&quot;&gt;
                &lt;div class=&quot;table&quot;&gt;
                    &lt;div class=&quot;row&quot;&gt;
                        &lt;div class=&quot;cell cell-label&quot;&gt;Profile&lt;/div&gt;
                        &lt;div class=&quot;cell cell-value capitalize&quot; id=&quot;summary-profile-value&quot; &gt;&lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;row&quot;&gt;
                        &lt;div class=&quot;cell cell-label&quot;&gt;Standalone Mode&lt;/div&gt;
                        &lt;div class=&quot;cell cell-value&quot; id=&quot;summary-standalone-mode-value&quot;&gt;&lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;row&quot;&gt;
                        &lt;div class=&quot;cell cell-label&quot;&gt;Allow Workloads on K8s Master&lt;/div&gt;
                        &lt;div class=&quot;cell cell-value&quot; id=&quot;summary-workloads-on-master-value&quot;&gt;&lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;flex-item&quot;&gt;
                &lt;div class=&quot;table&quot;&gt;
                    &lt;div class=&quot;row&quot;&gt;
                        &lt;div class=&quot;cell cell-label&quot;&gt;Number of KX-Main Nodes&lt;/div&gt;
                        &lt;div class=&quot;cell cell-value&quot; id=&quot;summary-main-nodes-number-value&quot;&gt;&lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;row&quot;&gt;
                        &lt;div class=&quot;cell cell-label&quot;&gt;Number of KX-Worker Nodes&lt;/div&gt;
                        &lt;div class=&quot;cell cell-value&quot; id=&quot;summary-worker-nodes-number-value&quot;&gt;&lt;/div&gt;
                    &lt;/div&gt;
                     &lt;div class=&quot;row&quot;&gt;
                        &lt;div class=&quot;cell cell-label&quot;&gt;Selected Templates to Install&lt;/div&gt;
                        &lt;div class=&quot;cell cell-value&quot; id=&quot;list-templates-to-install&quot;&gt;&lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
         &lt;/div&gt;

        &lt;br&gt;
            &lt;div class=&quot;div-border-text-inline&quot;&gt;
                &lt;h2 class=&quot;h2-header-in-line&quot;&gt;&lt;span class=&quot;span-h2-header-in-line&quot;&gt;🚀 Launch KX.AS.CODE environment&lt;/span&gt;&lt;/h2&gt;
                &lt;div class=&quot;div-inner-h2-header-in-line-wrapper&quot;&gt;
                    &lt;span style=&quot;vertical-align: middle; display: inline-block;&quot;&gt;
                        &lt;span class=&quot;launch-action-text-label&quot; style=&quot;width: 50px;&quot;&gt;Date: &lt;/span&gt;&lt;span id=&quot;kx-launch-build-timestamp&quot; class=&quot;build-action-text-value&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;launch-action-text-label&quot; style=&quot;width: 70px; &quot;&gt;Status: &lt;/span&gt;&lt;span id=&quot;kx-launch-build-result&quot; style=&quot;width: 100px; margin-right: 30px; display: inline-flex;&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;launch-action-text-label&quot; style=&quot;width: 100px;&quot;&gt;Last Action: &lt;/span&gt;&lt;span id=&quot;kx-launch-last-action&quot; class=&quot;build-action-text-value&quot; style=&quot;width: 50px;&quot;&gt;&lt;/span&gt;
                        &lt;span class=&quot;launch-action-text-label&quot; style=&quot;width: 100px;&quot;&gt;Running VMs: &lt;/span&gt;&lt;span id=&quot;kx-launch-running-vms&quot; class=&quot;build-action-text-value build-action-text-value-result&quot; style=&quot;width: 150px;&quot;&gt;Main: ${kxMainRunningVms.size()} Workers: ${kxWorkerRunningVms.size()}&lt;/span&gt;
                        &lt;span class=&quot;build-number-span&quot; id=&quot;kx-launch-build-number-link&quot;&gt;&lt;/span&gt;
                    &lt;/span&gt;
                    &lt;span class=&apos;span-rounded-border&apos;&gt;
                        &lt;img src=&apos;/userContent/icons/play.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Start Environment&quot; alt=&quot;Start Environment&quot; onclick=&apos;performRuntimeAction(&quot;up&quot;);&apos; /&gt;|
                        &lt;img src=&apos;/userContent/icons/stop.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Stop Environment&quot; alt=&quot;Stop Environment&quot; onclick=&apos;performRuntimeAction(&quot;halt&quot;);&apos; /&gt;|
                        &lt;img src=&apos;/userContent/icons/cancel.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Delete Environment&quot; alt=&quot;Delete Environment&quot; onclick=&apos;performRuntimeAction(&quot;destroy&quot;);&apos; /&gt;|
                        &lt;img src=&apos;/userContent/icons/refresh.svg&apos; class=&quot;build-action-icon&quot; title=&quot;Refresh Data&quot; alt=&quot;Refresh Data&quot; onclick=&apos;getBuildJobListForProfile(&quot;KX.AS.CODE_Runtime_Actions&quot;, &quot;kx-launch&quot;);&apos; /&gt;|
                        &lt;div class=&quot;console-log&quot;&gt;&lt;span class=&quot;console-log-span&quot;&gt;&lt;img src=&quot;/userContent/icons/text-box-outline.svg&quot; onMouseover=&apos;showConsoleLog(&quot;KX.AS.CODE_Runtime_Actions&quot;, &quot;kx-launch&quot;);&apos; onclick=&apos;openFullConsoleLog(&quot;KX.AS.CODE_Runtime_Actions&quot;, &quot;kx-launch&quot;);&apos; class=&quot;build-action-icon&quot; alt=&quot;View Build Log&quot; title=&quot;Click to open full log in new tab&quot;&gt;&lt;span class=&quot;consolelogtext&quot; id=&apos;kxLaunchBuildConsoleLog&apos;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
                    &lt;/span&gt;
                &lt;/div&gt;
            &lt;/div&gt;
    &lt;/div&gt;
    &lt;style scoped=&quot;scoped&quot; onload=&quot;populateReviewTable(); getBuildJobListForProfile(&apos;KX.AS.CODE_Runtime_Actions&apos;, &apos;kx-launch&apos;);&quot;&gt;   &lt;/style&gt;
    &lt;/body&gt;
    &quot;&quot;&quot;
    return HTML
} catch (e) {
    println &quot;Something went wrong in the HTML return block (config_review_and_launch.groovy): ${e}&quot;
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters>PROFILE, GENERAL_PARAMETERS, KX_MAIN_NODES_CONFIG, KX_WORKER_NODES_CONFIG, STORAGE_PARAMETERS</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>PROFILE_CONFIG_JSON_UPDATE</name>
          <description></description>
          <randomName>choice-parameter-17383899378151</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>import groovy.json.JsonSlurper
import groovy.json.JsonBuilder
import java.nio.file.Files

def BASE_DOMAIN
def BASE_USER
def ENVIRONMENT_PREFIX
def BASE_PASSWORD
def STANDALONE_MODE
def ALLOW_WORKLOADS_ON_KUBERNETES_MASTER
def NUMBER_OF_KX_MAIN_NODES
def KX_MAIN_ADMIN_CPU_CORES
def KX_MAIN_ADMIN_MEMORY
def NUMBER_OF_KX_WORKER_NODES
def KX_WORKER_NODES_CPU_CORES
def KX_WORKER_NODES_MEMORY

def storageParameterElements
def generalParameterElements

def updatedJson
def parsedJson
def jsonFilePath = PROFILE
def inputFile = new File(jsonFilePath)
def profileParentPath = inputFile.getParentFile().getName()

def templateName
def parsedTemplateJson
def jsonInputFile

def template_paths = []
def selectedTemplates = []
def destinationFile
def alreadyExistingTemplateFilesInProfile = []
def fileToDelete

new File(&apos;jenkins_shared_workspace/kx.as.code/templates/&apos;).eachFileMatch(~/^aq.*.json$/) { template_paths &lt;&lt; it.path }
selectedTemplates = TEMPLATE_SELECTOR.split(&apos;;&apos;);
println(&quot;TEMPLATE_SELECTOR: ${TEMPLATE_SELECTOR}&quot;)
println(&quot;template_paths: ${template_paths}&quot;)

try {
    if ( USER_PROVISIONING ) {
        def userJsonFilePath = &quot;jenkins_shared_workspace/kx.as.code/profiles/${profileParentPath}/users.json&quot;
        def parsedUserJson = new JsonSlurper().parseText(USER_PROVISIONING)
        new File(userJsonFilePath).write(new JsonBuilder(parsedUserJson).toPrettyString())
    }
} catch (e) {
    println(&quot;Something went wrong in the groovy user provisioning block (profile_json_update.groovy): ${e}&quot;)
}

try {
    println(&quot;Before file search&quot;)
    def targetProfilePath=&quot;jenkins_shared_workspace/kx.as.code/profiles/${profileParentPath}&quot;
    new File(targetProfilePath).eachFileMatch(~/^aq.*.json$/) { alreadyExistingTemplateFilesInProfile &lt;&lt; it.path }
    alreadyExistingTemplateFilesInProfile.eachWithIndex { profileTemplateJson, i -&gt;
            println(&quot;Found ${profileTemplateJson} already in profiles directory&quot;)
        if ( profileTemplateJson.contains(&quot;custom&quot;)) {
            println(&quot;${profileTemplateJson} contains the word ####&quot;custom####&quot;. Not deleting&quot;)
        } else {
            println(&quot;Deleting standard template ${profileTemplateJson}&quot;)
            fileToDelete = new File(profileTemplateJson)
            fileToDelete.delete()
        }
    }
    println(&quot;After file search&quot;)

    template_paths.eachWithIndex { file, i -&gt;
        println(&quot;Processing file ${i} - ${file}&quot;)
        jsonInputFile = new File(file)
        parsedTemplateJson = new JsonSlurper().parse(jsonInputFile)
        templateName = parsedTemplateJson.title
        println(&quot;Parsed json and received title: ${templateName}&quot;)
        selectedTemplates.eachWithIndex { selectedTemplate, j -&gt;
            if (selectedTemplate == templateName) {
                println(&quot;${templateName} is selected. Adding components to list&quot;)
                destinationFile = new File(&quot;${targetProfilePath}/${jsonInputFile.getName()}&quot;)
                println(&quot;Copying ${jsonInputFile.toPath()} to ${destinationFile.toPath()}&quot;)
                Files.copy(jsonInputFile.toPath(), destinationFile.toPath())
            } else {
                println(&quot;${templateName} not selected. Ignoring&quot;)
            }
        }
    }
} catch (e) {
    println(&quot;Something went wrong in the groovy template block (profile_json_update.groovy): ${e}&quot;)
}

try {

    parsedJson = new JsonSlurper().parse(inputFile)

    if ( GENERAL_PARAMETERS ) {
        generalParameterElements = GENERAL_PARAMETERS.split(&apos;;&apos;)
        BASE_DOMAIN = generalParameterElements[0]
        ENVIRONMENT_PREFIX = generalParameterElements[1]
        BASE_USER = generalParameterElements[2]
        BASE_PASSWORD = generalParameterElements[3]
        STANDALONE_MODE = generalParameterElements[4]
        ALLOW_WORKLOADS_ON_KUBERNETES_MASTER = generalParameterElements[5]
        println(&quot;Retrieved BASE_DOMAIN: ${BASE_DOMAIN} (profile_json_update.groovy)&quot;)
        println(&quot;Retrieved ENVIRONMENT_PREFIX: ${ENVIRONMENT_PREFIX} (profile_json_update.groovy)&quot;)
        println(&quot;Retrieved BASE_USER: ${BASE_USER} (profile_json_update.groovy)&quot;)
        println(&quot;Retrieved BASE_PASSWORD: ${BASE_PASSWORD} (profile_json_update.groovy)&quot;)
        println(&quot;Retrieved STANDALONE_MODE: ${STANDALONE_MODE} (profile_json_update.groovy)&quot;)
        println(&quot;Retrieved ALLOW_WORKLOADS_ON_KUBERNETES_MASTER: ${ALLOW_WORKLOADS_ON_KUBERNETES_MASTER} (profile_json_update.groovy)&quot;)
    }

    if ( KX_MAIN_NODES_CONFIG ) {

        kxMainNodesConfigArray = KX_MAIN_NODES_CONFIG.split(&apos;;&apos;)
        NUMBER_OF_KX_MAIN_NODES = kxMainNodesConfigArray[0]
        KX_MAIN_ADMIN_CPU_CORES = kxMainNodesConfigArray[1]
        KX_MAIN_ADMIN_MEMORY = kxMainNodesConfigArray[2]
    }

    if ( KX_WORKER_NODES_CONFIG ) {
        kxWorkerNodesConfigArray = KX_WORKER_NODES_CONFIG.split(&apos;;&apos;)
        NUMBER_OF_KX_WORKER_NODES = kxWorkerNodesConfigArray[0]
        KX_WORKER_NODES_CPU_CORES = kxWorkerNodesConfigArray[1]
        KX_WORKER_NODES_MEMORY = kxWorkerNodesConfigArray[2]
    }

    if (STORAGE_PARAMETERS) {
        storageParameterElements = STORAGE_PARAMETERS.split(&apos;;&apos;)
    }

    def OLD_NUMBER_OF_KX_MAIN_NODES = parsedJson.config.vm_properties.main_node_count
    if (OLD_NUMBER_OF_KX_MAIN_NODES != NUMBER_OF_KX_MAIN_NODES &amp;&amp; NUMBER_OF_KX_MAIN_NODES != &quot;&quot; &amp;&amp; NUMBER_OF_KX_MAIN_NODES) {
        println(&quot;Updating NUMBER_OF_KX_MAIN_NODES to &quot; + NUMBER_OF_KX_MAIN_NODES)
        parsedJson.config.vm_properties.main_node_count = NUMBER_OF_KX_MAIN_NODES.toInteger()
    }

    def OLD_KX_MAIN_ADMIN_CPU_CORES = parsedJson.config.vm_properties.main_admin_node_cpu_cores
    if (OLD_KX_MAIN_ADMIN_CPU_CORES != KX_MAIN_ADMIN_CPU_CORES &amp;&amp; KX_MAIN_ADMIN_CPU_CORES != &quot;&quot; &amp;&amp; KX_MAIN_ADMIN_CPU_CORES) {
        println(&quot;Updating KX_MAIN_ADMIN_CPU_CORES to &quot; + KX_MAIN_ADMIN_CPU_CORES)
        parsedJson.config.vm_properties.main_admin_node_cpu_cores = KX_MAIN_ADMIN_CPU_CORES.toInteger()
    }

    def OLD_KX_MAIN_ADMIN_MEMORY = parsedJson.config.vm_properties.main_admin_node_memory
    if (OLD_KX_MAIN_ADMIN_MEMORY != KX_MAIN_ADMIN_MEMORY &amp;&amp; KX_MAIN_ADMIN_MEMORY != &quot;&quot; &amp;&amp; KX_MAIN_ADMIN_MEMORY) {
        parsedJson.config.vm_properties.main_admin_node_memory = KX_MAIN_ADMIN_MEMORY.toInteger()
    }
    
    def OLD_NUMBER_OF_KX_WORKER_NODES = parsedJson.config.vm_properties.worker_node_count
    if (OLD_NUMBER_OF_KX_WORKER_NODES != NUMBER_OF_KX_WORKER_NODES &amp;&amp; NUMBER_OF_KX_WORKER_NODES != &quot;&quot; &amp;&amp; NUMBER_OF_KX_WORKER_NODES) {
        println(&quot;Updating NUMBER_OF_KX_WORKER_NODES to &quot; + NUMBER_OF_KX_WORKER_NODES)
        parsedJson.config.vm_properties.worker_node_count = NUMBER_OF_KX_WORKER_NODES.toInteger()
    }

    def OLD_KX_WORKER_NODES_CPU_CORES = parsedJson.config.vm_properties.worker_node_cpu_cores
    if (OLD_KX_WORKER_NODES_CPU_CORES != KX_WORKER_NODES_CPU_CORES &amp;&amp; KX_WORKER_NODES_CPU_CORES != &quot;&quot; &amp;&amp; KX_WORKER_NODES_CPU_CORES) {
        println(&quot;Updating KX_WORKER_NODES_CPU_CORES to &quot; + KX_WORKER_NODES_CPU_CORES)
        parsedJson.config.vm_properties.worker_node_cpu_cores = KX_WORKER_NODES_CPU_CORES.toInteger()
    }

    def OLD_KX_WORKER_NODES_MEMORY = parsedJson.config.vm_properties.worker_node_memory
    if (OLD_KX_WORKER_NODES_MEMORY != KX_WORKER_NODES_MEMORY &amp;&amp; KX_WORKER_NODES_MEMORY != &quot;&quot; &amp;&amp; KX_WORKER_NODES_MEMORY) {
        println(&quot;Updating KX_WORKER_NODES_MEMORY to &quot; + KX_WORKER_NODES_MEMORY)
        parsedJson.config.vm_properties.worker_node_memory = KX_WORKER_NODES_MEMORY.toInteger()
    }

    if (BASE_DOMAIN) {
        def OLD_BASE_DOMAIN = parsedJson.config.baseDomain
        if (OLD_BASE_DOMAIN != BASE_DOMAIN &amp;&amp; BASE_DOMAIN != &quot;&quot;) {
            println(&quot;Updating BASE_DOMAIN to &quot; + BASE_DOMAIN)
            parsedJson.config.baseDomain = BASE_DOMAIN
        }
    } else {
        println(&quot;BASE_DOMAIN not changed. Skipping JSON update for this property&quot;)
        BASE_DOMAIN = parsedJson.config.baseDomain
    }

    if (ENVIRONMENT_PREFIX) {
        println(&quot;Updating ENVIRONMENT_PREFIX to &quot; + ENVIRONMENT_PREFIX)
        parsedJson.config.environmentPrefix = ENVIRONMENT_PREFIX
    } else {
        println(&quot;ENVIRONMENT_PREFIX not changed. Skipping JSON update for this property&quot;)
        ENVIRONMENT_PREFIX = parsedJson.config.environmentPrefix
    }

    if (BASE_USER) {
        println(&quot;Updating BASE_USER to &quot; + BASE_USER)
        parsedJson.config.baseUser = &quot;${BASE_USER}&quot;
        println(&quot;BASE_USER JSON after update: ${parsedJson.config.baseUser}&quot;)
    } else {
        println(&quot;BASE_USER not changed. Skipping JSON update for this property&quot;)
        BASE_USER = parsedJson.config.baseUser
    }

    if (BASE_PASSWORD) {
        println(&quot;Updating BASE_PASSWORD to &quot; + BASE_PASSWORD)
        parsedJson.config.basePassword = &quot;${BASE_PASSWORD}&quot;
        println(&quot;BASE_PASSWORD JSON after update: ${parsedJson.config.basePassword}&quot;)
    } else {
        println(&quot;BASE_PASSWORD not changed. Skipping JSON update for this property&quot;)
        BASE_PASSWORD = parsedJson.config.basePassword
    }

    if (STANDALONE_MODE) {
        println(&quot;Updating STANDALONE_MODE to &quot; + STANDALONE_MODE)
        parsedJson.config.standaloneMode = STANDALONE_MODE
    } else {
        println(&quot;STANDALONE_MODE not changed. Skipping JSON update for this property&quot;)
        STANDALONE_MODE = parsedJson.config.standaloneMode
    }

    if (ALLOW_WORKLOADS_ON_KUBERNETES_MASTER) {
        println(&quot;Updating ALLOW_WORKLOADS_ON_KUBERNETES_MASTER to &quot; + ALLOW_WORKLOADS_ON_KUBERNETES_MASTER)
        parsedJson.config.allowWorkloadsOnMaster = ALLOW_WORKLOADS_ON_KUBERNETES_MASTER
    } else {
        println(&quot;ALLOW_WORKLOADS_ON_KUBERNETES_MASTER not changed. Skipping JSON update for this property&quot;)
        ALLOW_WORKLOADS_ON_KUBERNETES_MASTER = parsedJson.config.allowWorkloadsOnMaster
    }

    def local_storage_num_one_gb = parsedJson.config.local_volumes.one_gb
    int number1GbVolumes = storageParameterElements[0].toInteger()
    if (local_storage_num_one_gb.toInteger() != number1GbVolumes &amp;&amp; number1GbVolumes != &quot;&quot; &amp;&amp; number1GbVolumes) {
        parsedJson.config.local_volumes.one_gb = number1GbVolumes
    }

    def local_storage_num_five_gb = parsedJson.config.local_volumes.five_gb
    int number5GbVolumes = storageParameterElements[1].toInteger()
    if (local_storage_num_five_gb.toInteger() != number5GbVolumes &amp;&amp; number5GbVolumes != &quot;&quot; &amp;&amp; number5GbVolumes) {
        parsedJson.config.local_volumes.five_gb = number1GbVolumes
    }

    def local_storage_num_ten_gb = parsedJson.config.local_volumes.ten_gb
    int number10GbVolumes = storageParameterElements[2].toInteger()
    if (local_storage_num_ten_gb.toInteger() != number10GbVolumes &amp;&amp; number10GbVolumes != &quot;&quot; &amp;&amp; number10GbVolumes) {
        parsedJson.config.local_volumes.ten_gb = number10GbVolumes
    }

    def local_storage_num_thirty_gb = parsedJson.config.local_volumes.thirty_gb
    int number30GbVolumes = storageParameterElements[3].toInteger()
    if (local_storage_num_thirty_gb.toInteger() != number30GbVolumes &amp;&amp; number30GbVolumes != &quot;&quot; &amp;&amp; number30GbVolumes) {
        parsedJson.config.local_volumes.thirty_gb = number30GbVolumes
    }

    def local_storage_num_fifty_gb = parsedJson.config.local_volumes.fifty_gb
    int number50GbVolumes = storageParameterElements[4].toInteger()
    if (local_storage_num_fifty_gb.toInteger() != number50GbVolumes &amp;&amp; number50GbVolumes != &quot;&quot; &amp;&amp; number50GbVolumes) {
        parsedJson.config.local_volumes.fifty_gb = number50GbVolumes
    }

    def OLD_NETWORK_STORAGE_OPTIONS = parsedJson.config.glusterFsDiskSize
    int NETWORK_STORAGE_OPTIONS = storageParameterElements[5].toInteger()
    if (OLD_NETWORK_STORAGE_OPTIONS != NETWORK_STORAGE_OPTIONS &amp;&amp; NETWORK_STORAGE_OPTIONS != &quot;&quot; &amp;&amp; NETWORK_STORAGE_OPTIONS) {
        parsedJson.config.glusterFsDiskSize = NETWORK_STORAGE_OPTIONS
    }

    println(&quot;DEBUG 1: BASE_USER (${BASE_USER}) JSON after update: ${parsedJson.config.baseUser}&quot;)
    println(&quot;DEBUG 1: BASE_PASSWORD (${BASE_PASSWORD}) JSON after update: ${parsedJson.config.basePassword}&quot;)

    updatedJson = new JsonBuilder(parsedJson).toPrettyString()

    println(&quot;DEBUG 2: BASE_USER (${BASE_USER}) JSON after update: ${parsedJson.config.baseUser}&quot;)
    println(&quot;DEBUG 2: BASE_PASSWORD (${BASE_PASSWORD}) JSON after update: ${parsedJson.config.basePassword}&quot;)

    new File(jsonFilePath).write(new JsonBuilder(parsedJson).toPrettyString())
    println(updatedJson)
    println(&quot;GENERAL_PARAMETERS: ${GENERAL_PARAMETERS}&quot;)
    println(&quot;BASE_DOMAIN: ${BASE_DOMAIN}&quot;)
    println(&quot;ENVIRONMENT_PREFIX: ${ENVIRONMENT_PREFIX}&quot;)
    println(&quot;BASE_USER: ${BASE_USER}&quot;)
    println(&quot;BASE_PASSWORD: ${BASE_PASSWORD}&quot;)
    println(&quot;PROFILE: ${PROFILE}&quot;)
    println(&quot;STANDALONE_MODE: ${STANDALONE_MODE}&quot;)
    println(&quot;KX_MAIN_ADMIN_MEMORY: ${KX_MAIN_ADMIN_MEMORY}&quot;)
    println(&quot;KX_MAIN_ADMIN_CPU_CORES: ${KX_MAIN_ADMIN_CPU_CORES}&quot;)
    println(&quot;ALLOW_WORKLOADS_ON_KUBERNETES_MASTER: ${ALLOW_WORKLOADS_ON_KUBERNETES_MASTER}&quot;)
    println(&quot;NUMBER_OF_KX_MAIN_NODES: ${NUMBER_OF_KX_MAIN_NODES}&quot;)
    println(&quot;NETWORK_STORAGE_OPTIONS: ${NETWORK_STORAGE_OPTIONS}&quot;)
    println(&quot;STORAGE_PARAMETERS: ${STORAGE_PARAMETERS}&quot;)

    println(&quot;Bottom of update JSON groovy&quot;)
} catch(e) {
    println(&quot;Something went wrong in the GROOVY block (profile_json_update.groovy): ${e}&quot;)
}

try {
    // language=HTML
    def HTML = &quot;&quot;&quot;
    &lt;body&gt;
    &lt;/body&gt;
    &quot;&quot;&quot;
    return HTML
} catch (e) {
    println(&quot;Something went wrong in the HTML return block (profile_json_update.groovy): ${e}&quot;)
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters>PROFILE, GENERAL_PARAMETERS, KX_MAIN_NODES_CONFIG, KX_WORKER_NODES_CONFIG, STORAGE_PARAMETERS, TEMPLATE_SELECTOR, USER_PROVISIONING</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>true</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>CONFIG_PANEL_NAVIGATOR</name>
          <randomName>choice-parameter-289437696221000</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>try {
    // language=HTML
    def HTML = &quot;&quot;&quot;
    &lt;body&gt;
    &lt;script&gt;
        function hideParameterDivs() {
            let configDivs = [
                &quot;headline-select-profile-div&quot;,
                &quot;select-profile-div&quot;,
                &quot;prerequisites-div&quot;,
                &quot;profile-builds-div&quot;,
                &quot;standalone-toggle-div&quot;,
                &quot;worker-cpu-count-div&quot;,
                &quot;worker-node-count-div&quot;,
                &quot;main-node-count-div&quot;,
                &quot;local-storage-div&quot;,
                &quot;main-memory-div&quot;,
                &quot;general-parameters-div&quot;,
                &quot;workloads-on-master-div&quot;,
                &quot;main-cpu-count-div&quot;,
                &quot;worker-memory-div&quot;,
                &quot;network-storage-div&quot;,
                &quot;headline-main-div&quot;,
                &quot;headline-workers-div&quot;,
                &quot;headline-storage-div&quot;,
                &quot;templates-div&quot;,
                &quot;user-provisioning-div&quot;,
                &quot;review-and-launch-div&quot;
            ];
            console.log(configDivs);
            configDivs.forEach(function(item) {
                try {
                    console.log(&quot;Hiding div: &quot; + item);
                    document.getElementById(item).style.display = &quot;none&quot;;
                } catch(e) {
                    console.log(&quot;Error hiding div: &quot; + e);
                }
            })

        }
  
            function change_panel_selection(config_panel) {
                
               if ( document.getElementById(&apos;system-prerequisites-check&apos;).value === &quot;failed&quot; ) {
                   config_panel = &quot;config-panel-profile-selection&quot;;
               }
                   
               console.log(&quot;Selected config-panel: &quot; + config_panel);
               
               waitForElement(config_panel,function(){
                    console.log(&quot;config-panel content: &quot; + document.getElementById(config_panel));
                });
                              
               waitForElement(&apos;config-placeholder&apos;,function(){
                    console.log(&quot;config-placeholder children: &quot; + document.getElementById(&apos;config-placeholder&apos;).checked);
                });
               
               let configPanelDivsInPlaceholderDiv = document.getElementById(&apos;config-placeholder&apos;).children;
                
               for (let i = 0; i &lt; configPanelDivsInPlaceholderDiv.length; i++) {
                   if ( configPanelDivsInPlaceholderDiv[i].style.display !== &quot;none&quot; ) {
                        console.log(&quot;Visible Divs in Config Placeholder: &quot; + configPanelDivsInPlaceholderDiv[i].id);
                   }
               }
                              
               const configPanels = [ 
                   &quot;config-panel-profile-selection&quot;,
                   &quot;config-panel-general-params&quot;,
                   &quot;config-panel-kx-main-config&quot;,
                   &quot;config-panel-storage-config&quot;,
                   &quot;config-panel-template-selection&quot;,
                   &quot;config-panel-user-provisioning&quot;,
                   &quot;config-panel-kx-summary-start&quot;
               ];
                
                let configPanelIcon
                console.log(configPanels);
                
                configPanels.forEach(function(item) {
                    configPanelIcon = item + &quot;-icon&quot;;
                    if ( item === config_panel ) {
                        console.log(&quot;Item selected: &quot; + item + &quot;, item icon: &quot; + configPanelIcon);
                        hideParameterDivs();
                        document.getElementById(item).className = &quot;config-tab-selected&quot;;
                        document.getElementById(configPanelIcon).className = &quot;config-panel-icon svg-purple&quot;;
                        switch (item) {
                            case &quot;config-panel-profile-selection&quot;:
                                console.log(&quot;Inside switch-case for select-profile-div&quot;);
                                moveDivToConfigPanel(&quot;headline-select-profile-div&quot;);
                                moveDivToConfigPanel(&quot;select-profile-div&quot;);
                                moveDivToConfigPanel(&quot;prerequisites-div&quot;);
                                moveDivToConfigPanel(&quot;profile-builds-div&quot;);
                                updateNavigationFooter(&quot;&quot;, &quot;config-panel-general-params&quot;);
                                break;
                            case &quot;config-panel-general-params&quot;:
                                moveDivToConfigPanel(&quot;general-parameters-div&quot;);
                                moveDivToConfigPanel(&quot;standalone-toggle-div&quot;);
                                moveDivToConfigPanel(&quot;workloads-on-master-div&quot;);
                                updateNavigationFooter(&quot;config-panel-profile-selection&quot;, &quot;config-panel-kx-main-config&quot;);
                                break;
                            case &quot;config-panel-kx-main-config&quot;:
                                moveDivToConfigPanel(&quot;headline-main-div&quot;);
                                moveDivToConfigPanel(&quot;main-node-count-div&quot;);
                                moveDivToConfigPanel(&quot;main-cpu-count-div&quot;);
                                moveDivToConfigPanel(&quot;main-memory-div&quot;);
                                moveDivToConfigPanel(&quot;headline-workers-div&quot;);
                                moveDivToConfigPanel(&quot;worker-node-count-div&quot;);
                                moveDivToConfigPanel(&quot;worker-cpu-count-div&quot;);
                                moveDivToConfigPanel(&quot;worker-memory-div&quot;);
                                updateNavigationFooter(&quot;config-panel-general-params&quot;, &quot;config-panel-storage-config&quot;);
                                break;
                            case &quot;config-panel-storage-config&quot;:
                                moveDivToConfigPanel(&quot;headline-storage-div&quot;);
                                moveDivToConfigPanel(&quot;network-storage-div&quot;);
                                moveDivToConfigPanel(&quot;local-storage-div&quot;);
                                updateNavigationFooter(&quot;config-panel-kx-main-config&quot;, &quot;config-panel-template-selection&quot;);
                                break;
                            case &quot;config-panel-template-selection&quot;:
                                moveDivToConfigPanel(&quot;templates-div&quot;);
                                updateNavigationFooter(&quot;config-panel-storage-config&quot;, &quot;config-panel-user-provisioning&quot;);
                                break;
                            case &quot;config-panel-user-provisioning&quot;:
                                moveDivToConfigPanel(&quot;user-provisioning-div&quot;);
                                updateNavigationFooter(&quot;config-panel-template-selection&quot;, &quot;config-panel-kx-summary-start&quot;);
                                break;
                            case &quot;config-panel-kx-summary-start&quot;:
                                moveDivToConfigPanel(&quot;review-and-launch-div&quot;);
                                updateNavigationFooter(&quot;config-panel-user-provisioning&quot;, &quot;&quot;);
                                break;
                        }
                    } else {
                        console.log(&quot;Item not selected: &quot; + item + &quot;, item icon: &quot; + configPanelIcon);
                        if ( document.getElementById(&apos;system-prerequisites-check&apos;).value === &quot;failed&quot; ) {
                            document.getElementById(item).className = &quot;config-tab-disabled&quot;;
                        } else {
                            document.getElementById(item).className = &quot;config-tab&quot;;
                        }
                        document.getElementById(configPanelIcon).className = &quot;config-panel-icon svg-white&quot;;
                    }  
                })
            }
            
            function removeAllChildNodes(parent) {
                while (parent.firstChild) {
                    parent.removeChild(parent.firstChild);
                }
            }

            function moveDivToConfigPanel(configDiv) {
                try {
                    let currentParent = document.getElementById(configDiv).parentNode.id;
                    console.log(&quot;(1) Current parent for &quot; + configDiv + &quot; is &quot; + currentParent);
                    let divConfigPanelParent = document.getElementById(&quot;config-placeholder&quot;);
                    let divConfigPanelChild = document.getElementById(configDiv);
                    console.log(&quot;Child div: &quot; + divConfigPanelChild.id);
                    let divChildConfigs = document.querySelectorAll(&apos;[id=&apos; + configDiv + &apos;]&apos;);
                    console.log(&quot;(2) Div &quot; + configDiv + &quot; is present &quot; + divChildConfigs.length + &quot; times&quot;);
                    if ( divChildConfigs.length &lt;= 1 &amp;&amp; currentParent !== &quot;config-placeholder&quot; ) {
                        console.log(&quot;(3) Parent div: &quot; + divConfigPanelParent);
                        divConfigPanelParent.appendChild(divConfigPanelChild);
                    } else if ( divChildConfigs.length &gt; 1) {
                        console.log(&quot;Inside divChildConfigs loop&quot;);
                        divChildConfigs.forEach(function(item) {
                            console.log(&quot;Item parent node: &quot; + item.parentNode.id);
                            if ( item.parentNode.id === &apos;config-placeholder&apos; ) {
                                divConfigPanelParent.removeChild(item);
                            };
                        });
                        console.log(&quot;(4) Parent div: &quot; + divConfigPanelParent);
                        currentParent = document.getElementById(configDiv).parentNode.id;
                        console.log(&quot;(5) Current parent for &quot; + configDiv + &quot; is &quot; + currentParent);
                        divConfigPanelChild = document.getElementById(configDiv);
                        divConfigPanelParent.appendChild(divConfigPanelChild);
                        console.log(document.querySelectorAll(&apos;[id=&apos; + configDiv + &apos;]&apos;));            
                    }
                    
                    let divConfigNumber = document.querySelectorAll(&apos;[id=&apos; + configDiv + &apos;]&apos;).length;
                    console.log(&quot;(6) Div &quot; + configDiv + &quot; is present &quot; + divConfigNumber + &quot; times&quot;);
                    
                    let displayType;
                    if ( configDiv === &quot;system-check-div&quot; || configDiv === &quot;review-and-launch-div&quot; ) {
                        displayType = &quot;flex&quot;;
                        if ( configDiv === &quot;review-and-launch-div&quot; ) {
                            console.log(&quot;ConfigDiv = review-and-launch-div. Populating review table&quot;);
                            populateReviewTable();
                        }
                    } else {
                        displayType = &quot;block&quot;;
                    }
                    divConfigPanelChild.style.display = displayType;
                } catch(e) {
                   console.log(&quot;Error in moveDivToConfigPanel(configDiv) function: &quot; + e);
                }
            }
            
            function updateNavigationFooter(previous, next) {
                
                console.log(&quot;Inside updateNavigationFooter(previous, next). Received params: &quot; + previous + &quot;, &quot; + next);
                let chevronsToShow;

                document.getElementById(&apos;config-panel-footer-left-nav-div&apos;).setAttribute( &quot;onClick&quot;, &quot;change_panel_selection(&apos;&quot; + previous +&quot;&apos;)&quot; );
                document.getElementById(&apos;config-panel-footer-right-nav-div&apos;).setAttribute( &quot;onClick&quot;, &quot;change_panel_selection(&apos;&quot; + next + &quot;&apos;)&quot; );
                                    
                if ( previous === &apos;&apos;) {
                    chevronsToShow = &quot;right-only&quot;;
                    console.log(&quot;Inside right-only&quot;);
                } else if ( next === &apos;&apos;) {
                    chevronsToShow = &quot;left-only&quot;;
                    console.log(&quot;Inside left-only&quot;);
                }  else {
                    chevronsToShow = &quot;both&quot;;
                    console.log(&quot;Inside both&quot;);
                }
                          
                if ( chevronsToShow === &quot;both&quot; ) {
                    document.getElementById(&quot;config-panel-footer-left-nav-div&quot;).style.display = &quot;block&quot;;
                    document.getElementById(&quot;config-panel-footer-right-nav-div&quot;).style.display = &quot;block&quot;;
                    document.getElementById(&quot;config-navigator-footer&quot;).style.justifyContent = &quot;space-between&quot;;
                } else if ( chevronsToShow === &quot;left-only&quot; ) {
                    document.getElementById(&quot;config-panel-footer-left-nav-div&quot;).style.display = &quot;block&quot;;
                    document.getElementById(&quot;config-panel-footer-right-nav-div&quot;).style.display = &quot;none&quot;;
                    document.getElementById(&quot;config-navigator-footer&quot;).style.justifyContent = &quot;flex-start&quot;;
                } else { 
                    document.getElementById(&quot;config-panel-footer-left-nav-div&quot;).style.display = &quot;none&quot;;
                    document.getElementById(&quot;config-panel-footer-right-nav-div&quot;).style.display = &quot;block&quot;;
                    document.getElementById(&quot;config-navigator-footer&quot;).style.justifyContent = &quot;flex-end&quot;;
                }
                               

            }
            
            function waitForElement(elementId, callBack){
              window.setTimeout(function(){
                let element = document.getElementById(elementId);
                if(element){
                  callBack(elementId, element);
                }else{
                  waitForElement(elementId, callBack);
                }
              },500)
            }
            
            function loadFirstConfigPanel() {
                waitForElement(&apos;profile-builds-div&apos;,function(){
                    document.getElementById(&quot;config-placeholder&quot;).removeChild(document.getElementById(&quot;grid-spinner&quot;));
                    change_panel_selection(&apos;config-panel-profile-selection&apos;);
                });
            }
&lt;/script&gt;
        &lt;div class=&quot;config-outer-wrapper&quot;&gt;
            &lt;div class=&quot;config-inner-panel&quot;&gt;
                &lt;div id=&quot;config-navigator&quot; class=&quot;config-selector-panel&quot;&gt;
                    &lt;div class=&quot;config-tab-selected&quot; id=&quot;config-panel-profile-selection&quot; onclick=&quot;change_panel_selection(this.id);&quot;&gt;&lt;img src=&quot;/userContent/icons/format-list-checks.svg&quot; id=&quot;config-panel-profile-selection-icon&quot; class=&quot;config-panel-icon svg-purple&quot; alt=&quot;Profile Selection&quot;&gt;&lt;/div&gt;
                    &lt;div class=&quot;config-tab&quot; id=&quot;config-panel-general-params&quot; onclick=&quot;change_panel_selection(this.id);&quot;&gt;&lt;img src=&quot;/userContent/icons/form-textbox.svg&quot; id=&quot;config-panel-general-params-icon&quot; class=&quot;config-panel-icon svg-white&quot; alt=&quot;General Parameters&quot;&gt;&lt;/div&gt;
                    &lt;div class=&quot;config-tab&quot; id=&quot;config-panel-kx-main-config&quot; onclick=&quot;change_panel_selection(this.id);&quot;&gt;&lt;img src=&quot;/userContent/icons/memory.svg&quot; id=&quot;config-panel-kx-main-config-icon&quot; class=&quot;config-panel-icon svg-white&quot; alt=&quot;KX-Main Node Configuration&quot;&gt;&lt;/div&gt;
                    &lt;div class=&quot;config-tab&quot; id=&quot;config-panel-storage-config&quot; onclick=&quot;change_panel_selection(this.id);&quot;&gt;&lt;img src=&quot;/userContent/icons/harddisk.svg&quot; id=&quot;config-panel-storage-config-icon&quot; class=&quot;config-panel-icon svg-white&quot; alt=&quot;Storage Configuration&quot;&gt;&lt;/div&gt;
                    &lt;div class=&quot;config-tab&quot; id=&quot;config-panel-template-selection&quot; onclick=&quot;change_panel_selection(this.id);&quot;&gt;&lt;img src=&quot;/userContent/icons/apps.svg&quot; id=&quot;config-panel-template-selection-icon&quot; class=&quot;config-panel-icon svg-white&quot; alt=&quot;Application Template Group Selection&quot;&gt;&lt;/div&gt;
                    &lt;div class=&quot;config-tab&quot; id=&quot;config-panel-user-provisioning&quot; onclick=&quot;change_panel_selection(this.id);&quot;&gt;&lt;img src=&quot;/userContent/icons/account-multiple.svg&quot; id=&quot;config-panel-user-provisioning-icon&quot; class=&quot;config-panel-icon svg-white&quot; alt=&quot;User Provisioning&quot;&gt;&lt;/div&gt;
                    &lt;div class=&quot;config-tab&quot; id=&quot;config-panel-kx-summary-start&quot; onclick=&quot;change_panel_selection(this.id);&quot;&gt;&lt;img src=&quot;/userContent/icons/clipboard-text-play-outline.svg&quot; id=&quot;config-panel-kx-summary-start-icon&quot; class=&quot;config-panel-icon svg-white&quot; alt=&quot;Deployment&quot;&gt;&lt;/div&gt;
                &lt;/div&gt;
                &lt;div id=&quot;config-placeholder&quot; class=&quot;config-placeholder&quot;&gt;
                    &lt;div id=&quot;grid-spinner&quot; class=&quot;grid-spinner-wrapper&quot;&gt;
                        &lt;div class=&quot;sk-grid&quot;&gt;
                          &lt;div class=&quot;sk-grid-cube&quot;&gt;&lt;/div&gt;
                          &lt;div class=&quot;sk-grid-cube&quot;&gt;&lt;/div&gt;
                          &lt;div class=&quot;sk-grid-cube&quot;&gt;&lt;/div&gt;
                          &lt;div class=&quot;sk-grid-cube&quot;&gt;&lt;/div&gt;
                          &lt;div class=&quot;sk-grid-cube&quot;&gt;&lt;/div&gt;
                          &lt;div class=&quot;sk-grid-cube&quot;&gt;&lt;/div&gt;
                          &lt;div class=&quot;sk-grid-cube&quot;&gt;&lt;/div&gt;
                          &lt;div class=&quot;sk-grid-cube&quot;&gt;&lt;/div&gt;
                          &lt;div class=&quot;sk-grid-cube&quot;&gt;&lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div id=&quot;config-navigator-footer&quot; class=&quot;config-selector-footer&quot;&gt;
                    &lt;div class=&quot;config-tab-footer-icons&quot; id=&quot;config-panel-footer-left-nav-div&quot; onclick=&quot;&quot; style=&quot;display: block&quot;&gt;&lt;img src=&quot;/userContent/icons/chevron-left.svg&quot; id=&quot;config-panel-left-nav-icon&quot; class=&quot;config-tab-footer-icons svg-white&quot; alt=&quot;navigate previous&quot;&gt;&lt;/div&gt;
                    &lt;div class=&quot;config-tab-footer-icons&quot; id=&quot;config-panel-footer-right-nav-div&quot; onclick=&quot;&quot; style=&quot;display: block&quot;&gt;&lt;img src=&quot;/userContent/icons/chevron-right.svg&quot; id=&quot;config-panel-right-nav-icon&quot; class=&quot;config-tab-footer-icons svg-white&quot; alt=&quot;navigate next&quot;&gt;&lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;style scoped=&quot;scoped&quot; onload=&quot;loadFirstConfigPanel();&quot;&gt;   &lt;/style&gt;
    &lt;/body&gt;
    &quot;&quot;&quot;
    return HTML
} catch (e) {
    println &quot;Something went wrong in the HTML return block (config_panel_navigator.groovy): ${e}&quot;
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>KX.AS.CODE_Launcher</projectName>
          <projectFullName>KX.AS.CODE_Launcher</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.33">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>{{shared_workspace_directory_path}}</customWorkspace>
  <builders/>
  <publishers/>
  <buildWrappers/>
</project>
